procedure
! Jul 25, 2016- RJB
! TEST SCRIPT FOR XFORM
! tests BYTE and HALF images
!
! Vicar Programs:
!       gen list mss difpic fastmos label-list
!
! External Programs;
!   <none>
!           
! parameters:
!   <none>
!
! Requires no external test data: 
!
refgbl $echo
body
let _onfail="stop"
let $echo="no"

WRITE "THIS IS A SCRIPT FILE TO TEST PROCEDURE XFORM"
let $echo="yes"
gen AX 40 40
gen BX 40 40 LINC=0 SINC=1
gen CX 40 40 LINC=1 SINC=0
let $echo="no"

WRITE "TEST THE REGULAR TRANSFORMATION PHASE"
WRITE "TEST THE BYTE OUTPUT"
WRITE "TEST THE PARM SIZE"
let $echo="yes"
xform (AX,BX,CX) D (1,1,20,20) 'BYTE +
 MATR=(1.,2.,1.) 'PRES
list  D (1,1,5,5)
list  D (16,16,5,5)

let $echo="no"
WRITE "TEST WITHOUT THE SIZE SPECIFIED"
let $echo="yes"
xform (AX,BX,CX) D 'BYTE MATR=(1.,1.,1.) 'PRES
list  D (1,1,5,5)

let $echo="no"
WRITE "TEST THE HALFWORD OUTPUT"
let $echo="yes"
xform (AX,BX,CX) D 'HALF MATR=(1.,2.,1.) 'PRES
list  D (1,1,5,10) 'HALF

let $echo="no"
WRITE "TEST THE AUTO-SCALE MODE"
WRITE "TEST THE BYTE OUTPUT"
WRITE "TEST THE PARM LINC AND PERC, AND MULTIPLE OUTPUTS"
let $echo="yes"
xform (AX,BX,CX) (D,E)  'BYTE MATR=(1.,2.,1.,2.,1.,2.) +
 LINC=5 PERC=12.
list  D (1,1,15,15)
list  E (1,1,15,15)

let $echo="no"
WRITE "TEST THE PARM LPER AND HPER"
let $echo="yes"
xform (AX,BX,CX) D 'BYTE MATR=(1.,1.,1.) +
 LPER=1. HPER=3.
list  D (1,1,10,10)
list  D (31,31,10,10)

let $echo="no"
WRITE "TEST THE PARM SPREAD"
let $echo="yes"
xform (AX,BX,CX) D 'BYTE MATR=(1.,1.,1.) +
 SPRE=128. PERC=1.
list  D (1,1,5,5)
list  D (36,36,5,5)

let $echo="no"
WRITE "TEST THE PARM CENTER & firm"
let $echo="yes"
xform (AX,BX,CX) D 'BYTE MATR=(1.,1.,1.) +
 CENT=100 PERC=1 SPREAD=200 'FIRM
list  D (1,1,5,5)
list  D (36,36,5,5)

let $echo="no"
WRITE "TEST THE PARM AREA"
let $echo="yes"
xform (AX,BX,CX) D 'BYTE MATR=(1.,1.,1.) +
 AREA=(11,11,20,20) PERC=12.
list  D (11,11,20,20)

let $echo="no"
WRITE "TEST THE HALFWORD OUTPUT"
let $echo="yes"
xform (AX,BX,CX) D 'HALF  MATR=(1.,1.,1.) LINC=3 PERC=12.
list  D (1,1,5,10) 'HALF

let $echo="no"
WRITE "TEST THE BYTE OUTPUT WITH MORE THAN ONE OUTPUT"
WRITE "  "
WRITE "THE RESULT OF THIS TEST SHOULD BE ALL ZERO"
let $echo="yes"
copy AX BX
xform (AX,BX) (G,GG) 'BYTE MATR=(1.,-1.,-1.,1.) 'PRES
list  G
list  GG

let $echo="no"
WRITE "TEST THE MSS BYTE OUTPUT"
let $echo="yes"
mss (AX,BX) MSS
let $echo="no"
WRITE "THE RESULT OF THIS TEST SHOULD BE ALL ZERO"
let $echo="yes"
xform MSS D 'BYTE MSS=2 MATR=(1,-1) 'PRES
list  D 

let $echo="no"
WRITE "TEST THE MSS SPECIFIED PARM USE"
let $echo="yes"
mss (AX,CX,BX) MSS
let $echo="no"
WRITE "THE RESULT OF THIS TEST SHOULD BE ALL ZERO"
let $echo="yes"
xform MSS D 'BYTE MSS=3 USE=(1,3) MATR=(1,-1) 'PRES
list  D

let $echo="no"
WRITE "TEST THE MSS HALFWORD OUTPUT"
let $echo="yes"
gen AY 10 20 'HALF
gen BY 10 20 'HALF
mss (AY,BY) MSS

let $echo="no"
WRITE "THE RESULT OF THIS TEST SHOULD BE ALL ZERO"
let $echo="yes"
xform MSS D  'HALF MSS=2 MATR=(1,-1) 'PRES
list  D

let $echo="no"
write "=============================================="
WRITE "TEST THE AREA PARAMETER WITH ONE OR MORE AREAS"
let $echo="yes"
gen AX 10 10 LINC=10 SINC=1
gen BX 10 10 LINC=10 SINC=1 IVAL=100
MSS (AX,BX) MSSB1
list  AX
let $echo="no"
WRITE "TRY AX AS A SINGLE FILE AND AS A MSS FILE WITH ONE BAND."
WRITE "SHOULD GET SAME RESULTS EITHER WAY. "
WRITE "OUTPUT IS STRETCHED ROUGHLY FROM 0 TO 255."
let $echo="yes"
xform AX OUT=XFORM0 MATR=1. PERC=0. LINC=1
list  XFORM0 'NOEJECT
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=0. LINC=1
list  XFORM0 'NOEJECT

let $echo="no"
WRITE "TRY SIZE FIELD TO GET 7 BY 8 OUTPUT"
WRITE "OUTPUT IS STRETCHED ROUGHLY FROM 0 TO 255."
let $echo="yes"
xform AX OUT=XFORM0 MATR=1. PERC=0. SIZE=(3,2,7,8) LINC=1
list  XFORM0 'NOEJECT
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=0. SIZE=(3,2,7,8) LINC=1
list  XFORM0 'NOEJECT

let $echo="no"
WRITE "TRY AREA"
WRITE "OUTPUT IS STRETCHED ROUGHLY FROM 0 TO 255 IN THE SPECIFIED AREA."
WRITE "OUTPUT IS SATURATED OUTSIDE THE AREA."
let $echo="yes"
xform AX OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,7,8)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,7,8)
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,1,8)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,1,8)
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,1,8  7,2,1,8)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=0. AREA=(3,2,1,8  7,2,1,8)
list  XFORM0 'NOEJECT 'ZERO

let $echo="no"
WRITE "THE FOLLOWING GROUP WITH PERC=20. SHOULD ALL YIELD THE SAME OUTPUT"
WRITE "THE TOP AND BOTTOM LINES SHOULD BE SATURATED."
let $echo="yes"
xform AX OUT=XFORM0 MATR=1. PERC=20. LINC=1
list  XFORM0 'NOEJECT 'ZERO 
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=20. LINC=1
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=20. SIZE=(1,1,10,10) LINC=1
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=20. SIZE=(1,1,10,10) LINC=1
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,10,10)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,10,10)
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,10,2  1,3,10,6  1,9,10,2)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,10,2  1,3,10,6  1,9,10,2)
list  XFORM0 'NOEJECT 'ZERO
xform AX OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,2,10  3,1,6,10  9,1,2,10)
list  XFORM0 'NOEJECT 'ZERO
xform AX MSS=1 OUT=XFORM0 MATR=1. PERC=20. AREA=(1,1,2,10  3,1,6,10  9,1,2,10)
list  XFORM0 'NOEJECT 'ZERO

let $echo="no"
WRITE "OUTPUT SHOULD BE STRETCHED WITH 0 PERCENT SATURATION"
let $echo="yes"
xform MSSB1 (X,Y) MSS=2 MATR=(1.,0., 0.,1.) linc=1 perc=0
list  X
list  Y
xform (AX BX) (X1,Y1) MATR=(1.,0., 0.,1.) linc=1 perc=0
let $echo="no"
WRITE "SHOULD GET 0 DIFFERENCES."
let $echo="yes"
difpic (X X1)
difpic (Y Y1)

! more tests

goto skip
!
! Jul 16, 2016 
! dont understand this test. Fails with msg
! difpic (B B1)
! DIFPIC version 29jun04
!  Files have different dimensions, specify SIZE/BANDS parameter!
! ** ABEND called *
!
! However, log shows it passes with 1995 version of DIFPIC
! difpic (B B1)
! Beginning VICAR task difpic
! DIFPIC version 10-11-95
!  NUMBER OF DIFFERENCES =   0
!
! Either the intent of the test is off or some pgm wasnt
! working right, so we are skipping until evaluation can
! be done.
! 
! TEST EXCLUDE
gen A0 10 10 ival=0 linc=0 sinc=0
gen A 10 10 ival=100
fastmos (A A0) A1 SIZE=(1,1, 100,100)
list A1
label-list A1
xform A1 OUT=B1 MATR=1. PERC=10. INC=1 EXCLUDE=0
xform A OUT=B MATR=1. PERC=10. INC=1
! SHOULD GET 0 DIFFERENCES
!difpic (B B1) C1 

skip>
! TEST REAL OUTPUT
gen A 10 10 ival=100
xform A OUT=B 'real MATR=1. 'preset
list B

! TEST FULL OUTPUT
xform A OUT=B 'FULL MATR=1. 'preset
list B

!TEST BSQ INPUT
gen A 40 40 3
xform A B (1,1,20,20) 'BYTE +
 MATR=(1.,2.,1.) 'PRES
label-list B
list  B (1,1,5,5) nb=1
list  B (16,16,5,5) nb=1
list  B (1,1,5,5) nb=1 sb=3
list  B (16,16,5,5) nb=1 sb=3

!TEST BIL OUTPUT
!THIS IS THE SAME AS THE AUTO-SCALE TEST ABOVE
gen AX 40 40
gen BX 40 40 LINC=0 SINC=1
gen CX 40 40 LINC=1 SINC=0
xform (AX,BX,CX) D 'BYTE MATR=(1.,2.,1.,2.,1.,2.) +
 LINC=5 PERC=12.
label-list D
list  D (1,1,15,15) 'bsq

let $echo="no"

end-proc
