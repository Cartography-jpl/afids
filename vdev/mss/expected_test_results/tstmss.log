tstmss
This is a small example to show how to use mss. This example takes
3 datasets with different number of samples and concatenates them
side by side to result in a 10x28 size dataset. NOTE: Each dataset
MUST have the same number of lines
gen ba.img 10 10
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen bb.img 10 8
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen bc.img 10 10
Beginning VICAR task gen
GEN Version 6
GEN task completed
mss (ba.img, bb.img, bc.img) bd.img
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     28 SAMPLES **
list bd.img
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:26 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp     1       3       5       7       9      11      13      15      17      19      21      23      25      27
   Line
      1       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5   6   7   0   1   2   3   4   5   6   7   8   9
      2       1   2   3   4   5   6   7   8   9  10   1   2   3   4   5   6   7   8   1   2   3   4   5   6   7   8   9  10
      3       2   3   4   5   6   7   8   9  10  11   2   3   4   5   6   7   8   9   2   3   4   5   6   7   8   9  10  11
      4       3   4   5   6   7   8   9  10  11  12   3   4   5   6   7   8   9  10   3   4   5   6   7   8   9  10  11  12
      5       4   5   6   7   8   9  10  11  12  13   4   5   6   7   8   9  10  11   4   5   6   7   8   9  10  11  12  13
      6       5   6   7   8   9  10  11  12  13  14   5   6   7   8   9  10  11  12   5   6   7   8   9  10  11  12  13  14
      7       6   7   8   9  10  11  12  13  14  15   6   7   8   9  10  11  12  13   6   7   8   9  10  11  12  13  14  15
      8       7   8   9  10  11  12  13  14  15  16   7   8   9  10  11  12  13  14   7   8   9  10  11  12  13  14  15  16
      9       8   9  10  11  12  13  14  15  16  17   8   9  10  11  12  13  14  15   8   9  10  11  12  13  14  15  16  17
     10       9  10  11  12  13  14  15  16  17  18   9  10  11  12  13  14  15  16   9  10  11  12  13  14  15  16  17  18
let $echo="no"
This example shows the use of the SIZE parameter. If NS of
the size field is equal to the number of samples in the
first input file, NS of the SIZE parameter is not used;
the actual number of samples in each input file will be used instead.
mss (ba.img, bb.img, bc.img) bd.img SIZE=(1,1,10,10)
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     28 SAMPLES **
list bd.img
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:26 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp     1       3       5       7       9      11      13      15      17      19      21      23      25      27
   Line
      1       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5   6   7   0   1   2   3   4   5   6   7   8   9
      2       1   2   3   4   5   6   7   8   9  10   1   2   3   4   5   6   7   8   1   2   3   4   5   6   7   8   9  10
      3       2   3   4   5   6   7   8   9  10  11   2   3   4   5   6   7   8   9   2   3   4   5   6   7   8   9  10  11
      4       3   4   5   6   7   8   9  10  11  12   3   4   5   6   7   8   9  10   3   4   5   6   7   8   9  10  11  12
      5       4   5   6   7   8   9  10  11  12  13   4   5   6   7   8   9  10  11   4   5   6   7   8   9  10  11  12  13
      6       5   6   7   8   9  10  11  12  13  14   5   6   7   8   9  10  11  12   5   6   7   8   9  10  11  12  13  14
      7       6   7   8   9  10  11  12  13  14  15   6   7   8   9  10  11  12  13   6   7   8   9  10  11  12  13  14  15
      8       7   8   9  10  11  12  13  14  15  16   7   8   9  10  11  12  13  14   7   8   9  10  11  12  13  14  15  16
      9       8   9  10  11  12  13  14  15  16  17   8   9  10  11  12  13  14  15   8   9  10  11  12  13  14  15  16  17
     10       9  10  11  12  13  14  15  16  17  18   9  10  11  12  13  14  15  16   9  10  11  12  13  14  15  16  17  18
mss (ba.img, bb.img, bc.img) be.img SIZE=(2,3,8,5)
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     15 SAMPLES **
list be.img
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:26 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp     1       3       5       7       9      11      13      15
   Line
      1       3   4   5   6   7   3   4   5   6   7   3   4   5   6   7
      2       4   5   6   7   8   4   5   6   7   8   4   5   6   7   8
      3       5   6   7   8   9   5   6   7   8   9   5   6   7   8   9
      4       6   7   8   9  10   6   7   8   9  10   6   7   8   9  10
      5       7   8   9  10  11   7   8   9  10  11   7   8   9  10  11
      6       8   9  10  11  12   8   9  10  11  12   8   9  10  11  12
      7       9  10  11  12  13   9  10  11  12  13   9  10  11  12  13
      8      10  11  12  13  14  10  11  12  13  14  10  11  12  13  14
gen ha.img 10 10 'HALF
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen hb.img 10 8  'HALF
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen hc.img 10 10 'HALF
Beginning VICAR task gen
GEN Version 6
GEN task completed
mss (ha.img, hb.img, hc.img) hd.img
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     28 SAMPLES **
list hd.img
Beginning VICAR task list

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp       1     2     3     4     5     6     7     8     9    10    11    12    13    14    15
   Line
      1         0     1     2     3     4     5     6     7     8     9     0     1     2     3     4
      2         1     2     3     4     5     6     7     8     9    10     1     2     3     4     5
      3         2     3     4     5     6     7     8     9    10    11     2     3     4     5     6
      4         3     4     5     6     7     8     9    10    11    12     3     4     5     6     7
      5         4     5     6     7     8     9    10    11    12    13     4     5     6     7     8
      6         5     6     7     8     9    10    11    12    13    14     5     6     7     8     9
      7         6     7     8     9    10    11    12    13    14    15     6     7     8     9    10
      8         7     8     9    10    11    12    13    14    15    16     7     8     9    10    11
      9         8     9    10    11    12    13    14    15    16    17     8     9    10    11    12
     10         9    10    11    12    13    14    15    16    17    18     9    10    11    12    13

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp      16    17    18    19    20    21    22    23    24    25    26    27    28
   Line
      1         5     6     7     0     1     2     3     4     5     6     7     8     9
      2         6     7     8     1     2     3     4     5     6     7     8     9    10
      3         7     8     9     2     3     4     5     6     7     8     9    10    11
      4         8     9    10     3     4     5     6     7     8     9    10    11    12
      5         9    10    11     4     5     6     7     8     9    10    11    12    13
      6        10    11    12     5     6     7     8     9    10    11    12    13    14
      7        11    12    13     6     7     8     9    10    11    12    13    14    15
      8        12    13    14     7     8     9    10    11    12    13    14    15    16
      9        13    14    15     8     9    10    11    12    13    14    15    16    17
     10        14    15    16     9    10    11    12    13    14    15    16    17    18
mss (ha.img, hb.img, hc.img) he.img SIZE=(2,3,8,5)
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     15 SAMPLES **
list he.img
Beginning VICAR task list

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
     Samp       1     2     3     4     5     6     7     8     9    10    11    12    13    14    15
   Line
      1         3     4     5     6     7     3     4     5     6     7     3     4     5     6     7
      2         4     5     6     7     8     4     5     6     7     8     4     5     6     7     8
      3         5     6     7     8     9     5     6     7     8     9     5     6     7     8     9
      4         6     7     8     9    10     6     7     8     9    10     6     7     8     9    10
      5         7     8     9    10    11     7     8     9    10    11     7     8     9    10    11
      6         8     9    10    11    12     8     9    10    11    12     8     9    10    11    12
      7         9    10    11    12    13     9    10    11    12    13     9    10    11    12    13
      8        10    11    12    13    14    10    11    12    13    14    10    11    12    13    14
gen ra.img 10 10 'REAL4
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen rb.img 10 8  'REAL4
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen rc.img 10 10 'REAL4
Beginning VICAR task gen
GEN Version 6
GEN task completed
mss (ra.img, rb.img, rc.img) rd.img
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     28 SAMPLES **
list rd.img
Beginning VICAR task list

   REAL     samples are interpreted as  REAL*4  data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp             1           2           3           4           5           6           7           8           9          10
   Line
      1       0.000E+00   1.000E+00   2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00
      2       1.000E+00   2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01
      3       2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01
      4       3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01
      5       4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01
      6       5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01
      7       6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01
      8       7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01
      9       8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01   1.700E+01
     10       9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01   1.700E+01   1.800E+01

   REAL     samples are interpreted as  REAL*4  data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp            11          12          13          14          15          16          17          18          19          20
   Line
      1       0.000E+00   1.000E+00   2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   0.000E+00   1.000E+00
      2       1.000E+00   2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   1.000E+00   2.000E+00
      3       2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   2.000E+00   3.000E+00
      4       3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   3.000E+00   4.000E+00
      5       4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   4.000E+00   5.000E+00
      6       5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   5.000E+00   6.000E+00
      7       6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   6.000E+00   7.000E+00
      8       7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   7.000E+00   8.000E+00
      9       8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   8.000E+00   9.000E+00
     10       9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01   9.000E+00   1.000E+01

   REAL     samples are interpreted as  REAL*4  data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp            21          22          23          24          25          26          27          28
   Line
      1       2.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00
      2       3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01
      3       4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01
      4       5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01
      5       6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01
      6       7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01
      7       8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01
      8       9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01
      9       1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01   1.700E+01
     10       1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.500E+01   1.600E+01   1.700E+01   1.800E+01
mss (ra.img, rb.img, rc.img) re.img SIZE=(2,3,8,5)
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     15 SAMPLES **
list re.img 'REAL4
Beginning VICAR task list

   REAL     samples are interpreted as  REAL*4  data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp             1           2           3           4           5           6           7           8           9          10
   Line
      1       3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00
      2       4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00
      3       5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00
      4       6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01   6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01
      5       7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01   7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01
      6       8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01   8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01
      7       9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01   9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01
      8       1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01   1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01

   REAL     samples are interpreted as  REAL*4  data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:27 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp            11          12          13          14          15
   Line
      1       3.000E+00   4.000E+00   5.000E+00   6.000E+00   7.000E+00
      2       4.000E+00   5.000E+00   6.000E+00   7.000E+00   8.000E+00
      3       5.000E+00   6.000E+00   7.000E+00   8.000E+00   9.000E+00
      4       6.000E+00   7.000E+00   8.000E+00   9.000E+00   1.000E+01
      5       7.000E+00   8.000E+00   9.000E+00   1.000E+01   1.100E+01
      6       8.000E+00   9.000E+00   1.000E+01   1.100E+01   1.200E+01
      7       9.000E+00   1.000E+01   1.100E+01   1.200E+01   1.300E+01
      8       1.000E+01   1.100E+01   1.200E+01   1.300E+01   1.400E+01
let $echo="no"
This is a small example to show how to use mss. This example takes
3 datasets with the same number of samples and concatenates them side
by side to result in a 10x30 size dataset. NOTE: Each dataset 
MUST have the same number of lines
gen a.img 10 10 IVAL=1 SINC=0 LINC=0
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen b.img 10 10 IVAL=2 SINC=0 LINC=0
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen c.img 10 10 IVAL=3 SINC=0 LINC=0
Beginning VICAR task gen
GEN Version 6
GEN task completed
mss INP=(a.img, b.img, c.img) OUT=d.img
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     30 SAMPLES **
list d.img
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp     1       3       5       7       9      11      13      15      17      19      21      23      25      27      29
   Line
      1       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      2       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      3       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      4       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      5       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      6       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      7       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      8       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
      9       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
     10       1   1   1   1   1   1   1   1   1   1   2   2   2   2   2   2   2   2   2   2   3   3   3   3   3   3   3   3   3   3
let $echo="no"
This example shows the use of the SIZE parameter. mss can also take
a portion of the input pictures and concatenate them side by side.
gen a2.img 20 20
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen b2.img 20 20
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen c2.img 20 20
Beginning VICAR task gen
GEN Version 6
GEN task completed
mss (a2.img, b2.img, c2.img) d2.img SIZE=(1,1,10,10)
Beginning VICAR task mss
MSS - 14-JUL-2016 - 64bit - RJB
* OUTPUT CONTAINS   3 INTERLEAVED DATA SETS **
* ACTUAL OUTPUT RECORD LENGTH     30 SAMPLES **
list d2.img
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
 Task:MSS       User:rjb       Date_Time:Wed Jul 27 01:07:28 2016
     Samp     1       3       5       7       9      11      13      15      17      19      21      23      25      27      29
   Line
      1       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5   6   7   8   9
      2       1   2   3   4   5   6   7   8   9  10   1   2   3   4   5   6   7   8   9  10   1   2   3   4   5   6   7   8   9  10
      3       2   3   4   5   6   7   8   9  10  11   2   3   4   5   6   7   8   9  10  11   2   3   4   5   6   7   8   9  10  11
      4       3   4   5   6   7   8   9  10  11  12   3   4   5   6   7   8   9  10  11  12   3   4   5   6   7   8   9  10  11  12
      5       4   5   6   7   8   9  10  11  12  13   4   5   6   7   8   9  10  11  12  13   4   5   6   7   8   9  10  11  12  13
      6       5   6   7   8   9  10  11  12  13  14   5   6   7   8   9  10  11  12  13  14   5   6   7   8   9  10  11  12  13  14
      7       6   7   8   9  10  11  12  13  14  15   6   7   8   9  10  11  12  13  14  15   6   7   8   9  10  11  12  13  14  15
      8       7   8   9  10  11  12  13  14  15  16   7   8   9  10  11  12  13  14  15  16   7   8   9  10  11  12  13  14  15  16
      9       8   9  10  11  12  13  14  15  16  17   8   9  10  11  12  13  14  15  16  17   8   9  10  11  12  13  14  15  16  17
     10       9  10  11  12  13  14  15  16  17  18   9  10  11  12  13  14  15  16  17  18   9  10  11  12  13  14  15  16  17  18
let $echo="no"
exit
slogoff
