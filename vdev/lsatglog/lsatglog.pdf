procedure help=*
parm key type=string
parm infile type=string
parm metfile type=string
parm band type=string
parm maptype type=string valid=("pc","utm") default="pc"
parm hdrtype type=string valid=("met","early","") default="met"
parm out type=string

local outfile string
local scratchfile string
local scratchfile2 string

local utmzone int
local utmhemi int
local utmpcs int
local utmpcs2 int
local utmpcs3 int
local refrow real
local refcol real
local refn real
local refe real
local ninc real
local einc real
local utmstring string
local llmaster string
local ilon int
local ilat int
local mlon real
local mlat real
local mlonp1 real
local mlatm1 real

local ull real
local uls real
local url real
local urs real
local lll real
local lls real

local uln real
local ule real
local urn real
local ure real
local lln real
local lle real

local sl int
local ss int
local nl int
local ns int
body

! set up file names and log to VICAR

let outfile =  "scratch/" // "&out"
let scratchfile =  "scratch/" // "&key" // ".templsat"
let scratchfile2 =  "scratch/" // "&key" // ".templsat2"
let llmaster =  "scratch/" // "&key" // ".llmaster"

vtiff3-tovic &infile &scratchfile
if ("&metfile"="")
   gt2tcl &scratchfile val=utmpcs keyword=PROJECTEDCSTYPEGEOKEY vtype=4
   let utmpcs2 = utmpcs/100
   let utmzone = utmpcs-utmpcs2*100
   let utmpcs3 = utmpcs2/2
   let utmhemi = utmpcs2-utmpcs3*2
   write "utmzone &utmzone utmhemi &utmhemi"
   ibis-gen &scratchfile2 nc=6 nr=1 datacol=(1,2) +
      deffmt=DOUB data=(1.0,1.0)
   pixmap (&scratchfile2,&scratchfile) mapcol=(3,4) pixcol=(1,2) 'pixtomap
   ibis2tcl &scratchfile2 v1=ule v2 = uln vartype=(-1,-1) +   
      ibisloc=(1,3,1,4)
   write "ule uln &ule &uln"
   goto nomet
end-if

! automatic detection here

write "hdrtype &hdrtype ."
if (hdrtype<>"early" and hdrtype<>"met")
   !asc2tcl &metfile keyword=ZONEIDENTIFIER val=utmzone vtype=4 'met
   !if (utmzone>-1) 
   
   asc2tcl &metfile keyword="PROJECTION UTM" val=utmzone vtype=4
   if (utmzone>-1)
      let hdrtype = "early"
   else
      let hdrtype = "met"
   end-if
   
   write "automatic detection of hdrtype: &hdrtype"
end-if

! get info from .met file and attach VICAR GeoTIFF label
! plan is to detect type and get rid of hdrtype kwd

if (hdrtype="met")
   asc2tcl &metfile keyword=ZONEIDENTIFIER val=utmzone vtype=4 'met
   asc2tcl &metfile keyword=ReferencePixelRowNumber val=refrow vtype=8 'met
   asc2tcl &metfile keyword=ReferencePixelColumnNumber val=refcol vtype=8 'met
   asc2tcl &metfile keyword=ReferencePixelNorthing val=refn vtype=8 'met
   asc2tcl &metfile keyword=ReferencePixelEasting val=refe vtype=8 'met
   asc2tcl &metfile keyword=NorthingIncrement val=ninc vtype=8 'met
   asc2tcl &metfile keyword=EastingIncrement val=einc vtype=8 'met
else-if (hdrtype="early")
   asc2tcl &metfile keyword="PROJECTION UTM" val=utmzone vtype=4
   asc2tcl &metfile keyword=ROW_START val=refrow vtype=8
   asc2tcl &metfile keyword=COL_START val=refcol vtype=8
   asc2tcl &metfile keyword=Y_START val=refn vtype=8
   asc2tcl &metfile keyword=X_START val=refe vtype=8
   asc2tcl &metfile keyword=Y_INCREMENT val=ninc vtype=8
   asc2tcl &metfile keyword=X_INCREMENT val=einc vtype=8
end-if

let ull = refrow-1
let uls = refcol-1
let url = ull
let urs = uls+1
let lll = ull+1
let lls = uls
write "refe,refn &refe,&refn"
if (refn<0.0)
   let refn = refn+10000000.0
   let utmstring = "327" // "&utmzone" // "(PCS_WGS84_UTM_zone_" // "&utmzone" // "S)"
   let utmhemi = 1
else
   let utmstring = "326" // "&utmzone" // "(PCS_WGS84_UTM_zone_" // "&utmzone" // "N)"
   let utmhemi = 0
end-if
write "refe,refn &refe,&refn"
write "ull,uls &ull,&uls"
write "url,urs &url,&urs"
write "lll,lls &lll,&lls"

let ule = refe
let uln = refn
let ure = ule + einc
let urn = uln
let lle = ule
let lln = uln + ninc
write "ule,uln &ule,&uln"
write "ure,urn &ure,&urn"
write "lle,lln &lle,&lln"

if (maptype="utm")
   gtgen in=&scratchfile out=&outfile 'tiecnvrt 'rectfit +
      geotiff=("ModelTiePointTag=(&uls,&ull,0,&ule,&uln,0.0)", +
      "ModelTiePointTag=(&urs,&url,0,&ure,&urn,0.0)", +
      "ModelTiePointTag=(&lls,&lll,0,&lle,&lln,0.0)", +
      "ProjectedCSTypeGeoKey=&utmstring", +
      "GTRasterTypeGeoKey=2(RasterPixelIsPoint)")
   gtlist &outfile
   goto theend
end-if

gtgen in=&scratchfile 'tiecnvrt 'rectfit +
   geotiff=("ModelTiePointTag=(&uls,&ull,0,&ule,&uln,0.0)", +
     "ModelTiePointTag=(&urs,&url,0,&ure,&urn,0.0)", +
     "ModelTiePointTag=(&lls,&lll,0,&lle,&lln,0.0)", +
     "ProjectedCSTypeGeoKey=&utmstring", +
     "GTRasterTypeGeoKey=2(RasterPixelIsPoint)")
gtlist &scratchfile

nomet>
write "uln &uln"
let mlon = ($float(&utmzone)-31.0)*6.0+((&ule)-180000.0)*0.0000075
if (utmhemi=0)
   let mlat = &uln*.0000091
else
   let mlat = (&uln-10000000.0)*.0000091
end-if
let ilon = $fix(mlon+0.5)
let ilat = $fix(mlat+0.5)
let mlon = $float(ilon)
let mlat = $float(ilat)
let mlonp1 = mlon+1.0
let mlatm1 = mlat-1.0
write "&mlon &mlat"

gtgen out=&llmaster 'tiecnvrt 'rectfit +
   geotiff=("ModelTiePointTag=(0,0,0,&mlon,&mlat,0.0)", +
     "ModelTiePointTag=(3600,0,0,&mlonp1,&mlat,0.0)", +
     "ModelTiePointTag=(0,3600,0,&mlon,&mlatm1,0.0)", +
     "GTModelTypeGeoKey=2(ModelTypeGeographic)", +
     "GeogEllipsoidGeoKey=7030(Ellipse_WGS84)", +
     "GTRasterTypeGeoKey=2(RasterPixelIsPoint)")
gtlist &llmaster

gtwarp &scratchfile &scratchfile2 ref=&llmaster 'coverinp
gtcopy &llmaster &scratchfile   !cleanup

! reduce the blank gore areas around image

imcorner &scratchfile2 sldat=sl ssdat=ss nldat=nl nsdat=ns inside=-2
gtcopy &scratchfile2 &outfile size=(&sl,&ss,&nl,&ns)
gtcopy &llmaster &scratchfile2   !cleanup

theend>
end-proc
.TITLE
LSATLOG - log a LANDSAT image to VICAR and add GeoTIFF mapped label.
.HELP
PURPOSE
     
	   
CALL
     lsatlog key source band 
  WHERE:
     key            is an application name, such as kabul (see testcase).
     source         is is the source data set root name (sans suffixes).
     band           is the desired band suffix (such as nn3).

  
OPERATION



PERFORMANCE


.PAGE
Restrictions
------------

The files must be named "&source" // ".&bandname" and 
"&source" // ".&bandname"



.PAGE
Original Programmer: A. L. Zobrist, 21 Oct, 2002
Current Cognizant Programmer: A. L. Zobrist
updated and renamed lsatglog.pdf 2/11/04 alz
Change History:
 20 Dec, 2002  ALZ added utm option
 09 Jan, 2003  ALZ utm option operate on scratchfile
.LEVEL1
.vari key
aplication name or keyword
.vari source
root name for LANDSAT
.vari band
the band that will be processed
.vari maptype
pc  - will convert to Plate Caree
      mapped output
utm - will leave as utm but add
      VICAR GeoTIFF label
.var hdrtype
met - object oriented file that
      comes with landsat-7
early - name=value file that
      comes with older releases
leave blank for auto-detection
.level 2
.vari maptype
The pc maptype will place the grid so that a pixel center will lie
on a whole degree intersection, either in the image or by an extension 
of the image.  The utm maptype will preserve the gridding provided
with the raw data set.
.var hdrtype
We plan to obsolete this parameter by developing a program that
recognizes the type of file.
.END
