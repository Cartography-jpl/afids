procedure help=*
parm inp type=(string,99) count=2
parm thresh type=real default=0.00000001
parm grid type=(string,99) count=0:1 default=""
parm cornonly string valid=("n","y") default="n"

local rpcfile type=(string,99)
local dted type=(string,99)

local nl int
local ns int
local offl int
local offs int
local rnl real
local rns real
 
local lon real
local lat real
local elv real
local lon1 real
local lat1 real
local elv1 real
local lon2 real
local lat2 real
local elv2 real
local lon3 real
local lat3 real
local elv3 real
local lon4 real
local lat4 real
local elv4 real
local rval real
local drad real
local modeltype int
body

!  RPCCORN HANDYPROC, NOTE USE OF VICAR COORDS FOR AREA TYPE IMAGE

write "rpccorn 12/14/08"
let rpcfile = inp(1)
let dted = inp(2)
let drad = 180.0/3.1415926536
lab2tcl &rpcfile v1=nl v2=ns keyword=(nl,ns) 'system
let rnl = $float(nl)+0.5
let rns = $float(ns)+0.5
plab2tcl &rpcfile property=Geotiff val=modeltype +
   keyword=gtmodeltypegeokey vtype=4

if (grid<>"") goto havegrid

ibis-gen xxxcrfile3 nc=9 nr=4 deffmt=DOUB datacol=(4,5) +
  data=(0.5,0.5,0.5,&rns,&rnl,&rns,&rnl,0.5)
if (cornonly="n")
   rpcinv2 (xxxcrfile3,&rpcfile,&dted) thresh=&thresh
else
   pixmap (xxxcrfile3,&rpcfile) pixcol=(4,5) mapcol=(1,2) 'pixtomap
   if (modeltype=1)
      gtproj2 (xxxcrfile3,&rpcfile,&dted) incol=(1,2) outcol=(8,9) 'tec
      mf3 xxxcrfile3 f="c1=c8$c2=c9"
   end-if
   pixmap (xxxcrfile3,&dted) pixcol=(6,7) mapcol=(1,2) 'maptopix
   getzval (&dted,xxxcrfile3) cols=(6,7,3) win=2
end-if

! NITF CORNER 1

ibis2tcl xxxcrfile3 v1=lon1 v2=lat1 v3=elv1 vartype=(-1,-1,-1) +
   ibisloc=(1,1,1,2,1,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON1=&lon1","NITF_CORNERLAT1=&lat1", +
   "NITF_CORNERELV1=&elv1")

! NITF CORNER 2

ibis2tcl xxxcrfile3 v1=lon2 v2=lat2 v3=elv2 vartype=(-1,-1,-1) +
   ibisloc=(2,1,2,2,2,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON2=&lon2","NITF_CORNERLAT2=&lat2", +
   "NITF_CORNERELV2=&elv2")

! NITF CORNER 3

ibis2tcl xxxcrfile3 v1=lon3 v2=lat3 v3=elv3 vartype=(-1,-1,-1) +
   ibisloc=(3,1,3,2,3,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON3=&lon3","NITF_CORNERLAT3=&lat3", +
   "NITF_CORNERELV3=&elv3")

! NITF CORNER 4

ibis2tcl xxxcrfile3 v1=lon4 v2=lat4 v3=elv4 vartype=(-1,-1,-1) +
   ibisloc=(4,1,4,2,4,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON4=&lon4","NITF_CORNERLAT4=&lat4", +
   "NITF_CORNERELV4=&elv4")

goto nogrid
havegrid>

ibis-gen xxxcrfile3 nc=7 nr=4 deffmt=DOUB datacol=(4,5) +
   data=(0.5,0.5,0.5,&rns,&rnl,&rns,&rnl,0.5)
gt2tcl &rpcfile val=offl keyword=CHIP_PARENT_OFFS_LINE vtype=4
gt2tcl &rpcfile val=offs keyword=CHIP_PARENT_OFFS_SAMP vtype=4
mf3 xxxcrfile3 f="c4=c4+(&offl)$c5=c5+(&offs)"
polygeov (&grid,xxxcrfile3) cols=(1,2,4,5) dcols=(4,5,1,2) +
   gridtol=9.0 'abendg
pixmap (xxxcrfile3,&dted) mapcol=(1,2) pixcol=(6,7) 'maptopix
getzval (&dted,xxxcrfile3) cols=(6,7,3) win=2
ibis2tcl xxxcrfile3 v1=lon1 v2=lat1 v3=elv1 vartype=(-1,-1,-1) +
   ibisloc=(1,1,1,2,1,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON1=&lon1","NITF_CORNERLAT1=&lat1", +
   "NITF_CORNERELV1=&elv1")
ibis2tcl xxxcrfile3 v1=lon2 v2=lat2 v3=elv2 vartype=(-1,-1,-1) +
   ibisloc=(2,1,2,2,2,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON2=&lon2","NITF_CORNERLAT2=&lat2", +
   "NITF_CORNERELV2=&elv2")
ibis2tcl xxxcrfile3 v1=lon3 v2=lat3 v3=elv3 vartype=(-1,-1,-1) +
   ibisloc=(3,1,3,2,3,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON3=&lon3","NITF_CORNERLAT3=&lat3", +
   "NITF_CORNERELV3=&elv3")
ibis2tcl xxxcrfile3 v1=lon4 v2=lat4 v3=elv4 vartype=(-1,-1,-1) +
   ibisloc=(4,1,4,2,4,3)
gtgenup &rpcfile +
   geotiff=("NITF_CORNERLON4=&lon4","NITF_CORNERLAT4=&lat4", +
   "NITF_CORNERELV4=&elv4")

nogrid>

!  do the center point (geographic)

mf3 xxxcrfile3 f="@avg(c1)$@avg(c2)"
pixmap (xxxcrfile3,&dted) mapcol=(1,2) pixcol=(6,7) 'maptopix
getzval (&dted,xxxcrfile3) cols=(6,7,3) win=2
if (cornonly="n")
   rpcfwd (xxxcrfile3,&rpcfile)
else
   ! not really used for corner only case
   pixmap (xxxcrfile3,&rpcfile) pixcol=(4,5) mapcol=(1,2) 'maptopix
end-if
ibis2tcl xxxcrfile3 v1=lon v2=lat v3=elv vartype=(-1,-1,-1) +
   ibisloc=(1,1,1,2,1,3)
gtgenup &rpcfile +
   geotiff=("NITF_CENTERLON=&lon","NITF_CENTERLAT=&lat", +
   "NITF_CENTERELV=&elv")

if (cornonly="y") goto theend

!  do the GSD, cannot use grid in rpcinv

ibis-gen xxxcrfile1 nc=8 nr=1 deffmt=DOUB
icat (xxxcrfile3,xxxcrfile1) xxxcrfile2 'h
mf3 xxxcrfile2 f="c8=c3$c9=c4+50.0$c10=c5+50.0"
rpcinv2 (xxxcrfile2,&rpcfile,&dted) thresh=0.000001 cols=(6,7,8,9,10) fixdted=y
!!!gtproj2 (xxxcrfile2,&rpcfile,need utm label) incol=(4,5) outcol=(11,12) 'tec
!!!gtproj2 (xxxcrfile2,&rpcfile,need utm label) incol=(9,10) outcol=(13,14) 'tec
!!!mf3 xxxcrfile2 f="c11=c11-c13$c12=c12-c14$c15=@sqrt(c11*c11+12*c12)"
mf3 xxxcrfile2 f="@dist(c1,c2,c6,c7,c15)$c15=c15*0.02"
!ibis-l xxxcrfile2 nr=1 cols=(1,2,3,4,5) csiz=(16,16,16,16,16) +
!     cfor="%16.11f %16.11f %16.11f %16.11f %16.11f"
!ibis-l xxxcrfile2 nr=1 cols=(6,7,8,9,10) csiz=(16,16,16,16,16) +
!     cfor="%16.11f %16.11f %16.11f %16.11f %16.11f"
!ibis-l xxxcrfile2 nr=1 cols=(11,12,13,14,15) csiz=(16,16,16,16,16) +
!     cfor="%16.11f %16.11f %16.11f %16.11f %16.11f"
ibis2tcl xxxcrfile2 v1=rval vartype=-1 ibisloc=(1,15)
gtgenup &rpcfile geotiff=("NITF_CENTER_GSD=&rval")

!  do the elev_ang, cannot do grid in rpcinv

ibis-gen xxxcrfile1 nc=10 nr=1 deffmt=DOUB
icat (xxxcrfile3,xxxcrfile1) xxxcrfile2 'h
mf3 xxxcrfile2 f="c9=c4$c10=c5$c8=c3+50.0"
rpcinv2 (xxxcrfile2,&rpcfile,&dted) thresh=0.000001 cols=(6,7,8,9,10) fixdted=y
mf3 xxxcrfile2 f="@dist(c1,c2,c6,c7,c11)$c12=c8-c3$c15=@atan2(c12,c11)*&drad"
ibis2tcl xxxcrfile2 v1=rval vartype=-1 ibisloc=(1,15)
gtgenup &rpcfile geotiff=("NITF_CENTER_ELEV_LOOK_ANG=&rval")

!  do the azim

ibis-gen xxxcrfile1 nc=10 nr=1 deffmt=DOUB
icat (xxxcrfile3,xxxcrfile1) xxxcrfile2 'h
mf3 xxxcrfile2 f="c6=c1$c7=c2+0.05$c8=c3"
rpcfwd (xxxcrfile2,&rpcfile) cols=(6,7,8,9,10)
mf3 xxxcrfile2 f="c11=c9-c4$c12=c10-c5$c15=@atan2(c12,-c11)*&drad"
ibis2tcl xxxcrfile2 v1=rval vartype=-1 ibisloc=(1,15)
gtgenup &rpcfile geotiff=("NITF_CENTER_AZIM=&rval")

!  do the upisup

ibis-gen xxxcrfile1 nc=10 nr=1 deffmt=DOUB
icat (xxxcrfile3,xxxcrfile1) xxxcrfile2 'h
mf3 xxxcrfile2 f="c8=c3+0.5$c6=c1$c7=c2"
rpcfwd (xxxcrfile2,&rpcfile) cols=(6,7,8,9,10)
mf3 xxxcrfile2 f="c11=c9-c4$c12=c10-c5$c15=@atan2(c12,-c11)*&drad"
ibis2tcl xxxcrfile2 v1=rval vartype=-1 ibisloc=(1,15)
gtgenup &rpcfile geotiff=("NITF_CENTER_UPISUP=&rval")

!  redo the old VICAR GeoTIFF mapping so xvd will work better

let rnl = rnl-0.5
let rns = rns-0.5
gtgen out=xxxcrfile1 'tiecnvrt +
   geotiff=("ModelTiePointTag=(0,0,0,&lon1,&lat1,0.0)", +
   "ModelTiePointTag=(&rns,0,0,&lon2,&lat2,0.0)", +
   "ModelTiePointTag=(0,&rnl,0,&lon4,&lat4,0.0)")
gtgenup (&rpcfile,xxxcrfile1) 

theend>
end-proc
.TITLE
RPCCORN - Find corners of an image using RPC in label and put in label
.HELP
PURPOSE
     RPCINV reads the GeoTIFF label of an image with GeoTIFF label
containing RPC's and uses the label information to reverse solve the
image corners and put them in the label.  If the corners are already in
the label, they will be replaced.  Elevations will also be added to the
label.  The geographic center of the four corners will also be added 
with its elevation.  Finally, the GSD, ELEV_LOOK_ANG, AZIM, and UPISUP
are calculated for the center point.

     If the user supplies a grid calculated from a parent image and
the label contains CHIP_PARENT_OFFS_LINE and CHIP_PARENT_OFFS_SAMP
then calculations are much faster.  The grid is calculated with routine
RPC2GRID.  See an example in the chipper.pdf procedure.

CALL
     rpccorn INPUT THRESH
  WHERE:
     INPUT          is the GeoTIFF data set followed by the dted
     THRESH         is a (lon,lat) threshold to stop iteration
 
OPERATION

The corners are generated and passed to routine rpcinv which gives an
accurate (lon,lat,elev) according to the RPC's.  gtuplab is used to put
these in the label.  The geographic center is generated by averaging the
four corners and its elevation is looked up by getzval.

PERFORMANCE

Expect about 40 seconds.

.PAGE
Restrictions
------------

The first input must have a GeoTIFF label. The dted file must be referenced
by a geographic (lon,lat) GeoTIFF label.

.PAGE
Original Programmer: A. L. Zobrist, 02 Mar, 2005
Current Cognizant Programmer: A. L. Zobrist
.LEVEL1
.VARI INP
Input file with GeoTIFF, RPC
DTED file
.VARI THRESH
RMS of (lon,lat) to stop itr
.VARI GRID
speedup grid from parent RPC
.VARI CORNONLY
If set to "y" will only 
calculate corners and 
centers
.help2
.VARI GRID
If the user supplies a grid calculated from a parent image and
the label contains CHIP_PARENT_OFFS_LINE and CHIP_PARENT_OFFS_SAMP
then calculations are much faster.  The grid is calculated with routine
RPC2GRID.  See an example in the chipper.pdf procedure.
.VARI CORNONLY
If set to "y" will only calculate corners and centers, using the standard
NITF labels and ordering
.END
