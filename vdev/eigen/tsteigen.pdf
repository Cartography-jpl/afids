procedure
local   afidsroot   type=string count=1
local   aftestdata  type=string count=1

! Oct 10 2019 - RJB
! TEST SCRIPT FOR EIGEN
!
! Vicar Programs:
!       translog label-list 
!
! External programs
!   <none> 
!
! Parameters:
!   <none>
!
! Requires external test data: 
! Uses cartlab or mipl dependent pointers
!   Cartlab defines env var $AFIDS_ROOT, mipl doesn't
!   The test data in cartlab is on /raid3/test_data 
!   but in other facilities it might be somewhere else. 
!   
!   To facilitate this test you can define an
!   environment variable $AFIDS_TESTDATA to point to
!   that data. The cartlab system does not. In the git archive
!   on pistol there is softlink to the test data in vdev that
!   allows this test to pass 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  refgbl $echo
  RefGbl $autousage
body

let _onfail="goto rm"
let $autousage="none"
let $echo="yes"
!check to see if mipl or cartlab for certain programs
!cartlab defines env var $AFIDS_ROOT, mipl doesm't
translog INP=AFIDS_ROOT TRANS=afidsroot
translog INP=AFIDS_TESTDATA TRANS=aftestdata
if (afidsroot = "")
!MIPL
    ush ln -s /project/test_work/testdata/mipl/vgr vgr
else
!CARTLAB
    if (aftestdata = "")
        ush ln -s ../test_data/mipl/vgr vgr
    else
!        ush ln -s $AFIDS_TESTDATA/mipl/vgr vgr
        ush ln -s /media/sf_raid3/test_data/mipl/vgr vgr
    end-if
end-if

  let $echo="no"
WRITE " this is a test for procedure eigen"
WRITE " the input byte data (uvb,viob,blub) and halfword data (uvh,vioh,bluh)" 
WRITE " are copied from /project/it/testdata/mipl/vgr for unix platforms, then"
WRITE " ftp the data to ALPHA using binary option for vms testing"
WRITE " test byte input"
WRITE " test parm inc"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) inc=10
let $echo="no"
WRITE " test parm linc"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) linc=20
let $echo="no"
WRITE " test parm area and xform output"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) out=(x,y,z) +
 area=(20,1,10,20,40,11,10,20)
let $echo="no"
WRITE " test parm exclud"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) exclud=11 +
 area=(20,1,10,20,40,11,10,20)
let $echo="no"
WRITE " test parm corr"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) 'corr inc=50
let $echo="no"
WRITE " test parm size"
let $echo="yes"
eigen inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) size=(11,11,20,20)
let $echo="no"
WRITE " test halfword data"
WRITE " test parm inc"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) 'half inc=100
let $echo="no"
WRITE " test parm linc"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) 'half linc=20
let $echo="no"
WRITE " test parm area"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) 'half +
      area=(400,1,10,10)
let $echo="no"
WRITE " test parm exclud"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) 'half exclud=12 +
 area=(101,11,10,10,201,11,10,10)
let $echo="no"
WRITE " test parm corr"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) 'half inc=50 'corr
let $echo="no"
WRITE " test parm size and xform mode (parm 'out')"
let $echo="yes"
eigen inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) out=(x,y,z) 'half +
 size=(100,101,30,100)
let $echo="no"
WRITE " test parm data"
let $echo="yes"
eigen nvar=3 data=(1.,33.,179.,991.,127.3,0.,341.0,987.6,99.3,111.,123.,+
 50.,333.,15.,999.,1234.,378.,111.1,255.,678.,1911.)
! 
! test mss mode
mss inp=(vgr/uvh.img, vgr/vioh.img, vgr/bluh.img) out=mssh
mss inp=(vgr/uvb.img, vgr/viob.img, vgr/blub.img) out=mssb
let $echo="no"
WRITE " test mss mode of byte data"
WRITE " test parm inc"
let $echo="yes"
eigen  mssb mss=3 inc=100
let $echo="no"
WRITE " test parm linc"
let $echo="yes"
eigen  mssb mss=3 linc=20
let $echo="no"
WRITE " test parm area"
let $echo="yes"
eigen  mssb mss=3 area=(101,1,30,30)
let $echo="no"
WRITE " test parm use"
let $echo="yes"
eigen  mssb mss=3 use=(1,3) linc=100
let $echo="no"
WRITE " test parm corr and area"
let $echo="yes"
eigen  mssb mss=3 'corr area=(101,1,30,30,201,11,30,30)
let $echo="no"
WRITE " test parm exclud and size"
let $echo="yes"
eigen  mssb mss=3 exclud=8 size=(11,11,30,30)
let $echo="no"
WRITE " test mss mode of halfword data"
WRITE " test parm inc"
let $echo="yes"
eigen  mssh mss=3 'half inc=100
let $echo="no"
WRITE " test parm linc"
let $echo="yes"
eigen  mssh mss=3 'half linc=20 
let $echo="no"
WRITE " test parm area"
let $echo="yes"
eigen  mssh mss=3 'half area=(101,1,30,30)
let $echo="no"
WRITE " test parm use"
let $echo="yes"
eigen  mssh mss=3 'half use=(1,3) linc=100
let $echo="no"
WRITE " test parm corr and area"
let $echo="yes"
eigen  mssh mss=3 'half 'corr area=(101,1,30,30,201,11,30,30)
let $echo="no"
WRITE " test parms byte and size and xform mode"
let $echo="yes"
eigen  mssh (x,y) mss=3 'byte size=(11,11,30,30)

rm>
let $echo="no"
ush rm vgr
end-proc
