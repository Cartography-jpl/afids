procedure help=*
parm key type=string
parm rawimg type=(string,99)
parm rawgeo type=(string,99)
parm fnamein type=(string,99)
parm band type=string
parm rdtype type=string
parm outimg type=(string,99)
parm modiscase type=int

local fname type=(string,99)
local inroot type=(string,99)

local logimg type=(string,99)
local logtxt type=(string,99)
local logint type=(string,99)
local logintcopy type=(string,99)
local tempfile1 type=(string,99)
local tempfile2 type=(string,99)
local tempfile3 type=(string,99)
local xxxvinp type=(string,99)
local xxxwinp type=(string,99)
local gridfinal1 type=(string,99)
local gridfinal2 type=(string,99)
local gridfinal3 type=(string,99)
local gridinfo type=(string,99)
local outfile type=(string,99)
local ufile type=(string,99)
local labelimg type=(string,99)

local rsl real
local rss real
local rnl real
local rns real
local sl int
local ss int
local nl int
local ns int
local mnl int
local mns int

local ffound int

local rslv real
local rssv real
local rnlv real
local rnsv real
local csl real
local css real
local cnl real
local cns real
local icsl int
local icss int
local icnl int
local icns int
local slv int
local ssv int
local nlv int
local nsv int

local lnl int
local lns int

local ascend int
local nscan int

local t1l real
local t1s real
local t2l real
local t2s real
local t3l real
local t3s real
local t1e real
local t1n real
local t2e real
local t2n real
local t3e real
local t3n real

local rastypstr string
local interp type=(string,10)
local rastype type=(string,10)
local rms type=real
local file2 type=(string,99)

refgbl $echo

body
let $echo="yes"

write "modwpadb2 june 5 2008"

plab2tcl inp=&fnamein property="COREG_META_DATA" val=interp +
    keyword=interp vtype=0
plab2tcl inp=&fnamein property="COREG_META_DATA" val=rastype +
    keyword=rastype vtype=0
if (interp="-999") let interp = "bilin"
if (rastype="-999") let rastype = "point"

if (rastype="area")
   let rastypstr = "1(RasterPixelIsArea)"
else
   let rastypstr = "2(RasterPixelIsPoint)"
end-if

plab2tcl inp=&fnamein property="COREG_META_DATA" val=fname +
    keyword=bobdate vtype=0
idgen prefix=bab outvar=labelimg

!  log the modis band

let inroot = "raw" // "&key" // "/&fname"
let logimg = "&inroot" // "_&band" // ".img"
let logtxt = "&inroot" // ".txt"
let logint = "&inroot" // ".int"
let logintcopy = "&inroot" // ".intcopy"

write "logging &rawimg"
if (band="1" or band="2")
   modislog_mod02qkm inp=&rawimg geo=&rawgeo out=&inroot +
      band=&band lineSkip=1 sampSkip=10
   let nscan = 40
else-if (band="lst")
   modislog_mod11_l2 inp=&rawimg geo=&rawgeo out=&inroot +
      band=&band lineSkip=1 sampSkip=10
   let nscan = 10
else
   modislog_mod021km inp=&rawimg geo=&rawgeo out=&inroot +
      band=&band lineSkip=1 sampSkip=10
   let nscan = 10
end-if

label-add inp=&logimg items="bobdate=&labelimg" +
         property="COREG_META_DATA"

! other filenames

let tempfile1 = "scratch/" // "xxx&key" // "temp1" // ".img"
let tempfile2 = "scratch/" // "xxx&key" // "temp2" // ".img"
let tempfile3 = "scratch/" // "xxx&key" // "temp3" // ".img"
let xxxvinp = "scratch/" // "xxx&key" // "temp3" // ".vimg"
let xxxwinp = "scratch/" // "xxx&key" // "temp3" // ".wimg"
let gridfinal1 = "final&key" // "/&fname"  // "gridfinal1"
let gridfinal2 = "final&key" // "/&fname"  // "gridfinal2"
let gridfinal3 = "final&key" // "/&fname"  // "gridfinal3"
let gridinfo = "final&key" // "/&fname"  // "gridinfo"
let outfile = "final&key" // "/&fname" // "_map4.&band"

! get the parameters from the gridinfo file

ibis2tcl &gridinfo v1=t1l v2=t1s v3=t1e v4=t1n +
    v5=t2l v6=t2s v7=t2e v8=t2n +
    v9=t3l v10=t3s +
    vartype=(-1,-1,-1,-1,-1,-1,-1,-1,-1,-1) +
    ibisloc=(1,1,1,2,1,3,1,4, +
             2,1,2,2,2,3,2,4, +
             3,1,3,2)
ibis2tcl &gridinfo v1=rsl v2=rss v3=rnl v4=rns v5=t3e v6=t3n +
   vartype=(0,0,0,0,0,0) ibisloc=(1,7,1,8,1,9,1,10,3,3,3,4)
let sl = $fix(rsl)
let ss = $fix(rss)
let nl = $fix(rnl)
let ns = $fix(rns)
write "sl ss nl ns &sl &ss &nl &ns"
ibis2tcl &gridinfo v1=csl v2=css v3=cnl v4=cns +
   vartype=(0,0,0,0) ibisloc=(1,11,1,12,1,13,1,14)
let icsl = $fix(csl)
let icss = $fix(css)
let icnl = $fix(cnl)
let icns = $fix(cns)
write "icsl icss icnl icns &icsl &icss &icnl &icns"

! the sl,ss,nl,ns for geom is different

ibis2tcl &gridfinal2 v1=rslv v2=rssv v3=rnlv v4=rnsv +
   vartype=(-1,-1,-1,-1) ibisloc=(1,1,1,2,1,3,1,4)
let slv = $fix(rslv)
let ssv = $fix(rssv)
let nlv = $fix(rnlv)
let nsv = $fix(rnsv)
write "slv ssv nlv nsv &slv &ssv &nlv &nsv"

! shortened processing extracted from modwarp.pdf

! for compression testing
compresschk &logimg

ibis-copy &logint &logintcopy
asc2tcl &logtxt keyword="LOG_ASCENDING=" val=ascend vtype=4
if (ascend=0)
   copy &logimg &tempfile2
else
   flot &logimg &tempfile2 mode=ROT180
   lab2tcl &tempfile2 v1=lnl v2=lns keyword=(nl,ns) 'system
   mf3 &logintcopy f="c1=(&lnl)+1-c1$c2=(&lns)+1-c2"
   sort &logintcopy sortcol=(1,2)
   ibis-copy &logintcopy scratch/xxxxlogintbak
end-if

! do the bowtie correction, need original nav file

bowtie (&tempfile2,&logintcopy) &tempfile2 cols=(1,2,3,4) nscan=&nscan

if (modiscase>0)
   ! to match the data treatment in modwarp.pdf
   lab2tcl &tempfile2 v1=mnl v2=mns keyword=(nl,ns) 'system
   copy &tempfile2 &xxxvinp sl=&mnl nl=1
   f2 inp=&xxxvinp out=&xxxwinp func="im1*0.0"
   append inp=(&tempfile2,&xxxvinp,&xxxwinp) out=&tempfile1
   copy &tempfile1 &xxxvinp sl=1 nl=1
   append inp=(&xxxwinp,&xxxvinp,&tempfile1) out=&tempfile2
end-if

copy &tempfile2 &tempfile1 size=(&icsl,&icss,&icnl,&icns)

gtgen inp=&tempfile1 'tiecnvrt +
   geotiff=("ModelTiePointTag=(&t1s,&t1l,0,&t1e,&t1n,0.0)", +
  "ModelTiePointTag=(&t2s,&t2l,0,&t2e,&t2n,0.0)", +
  "ModelTiePointTag=(&t3s,&t3l,0,&t3e,&t3n,0.0)", +
  "GTModelTypeGeoKey=2(ModelTypeGeographic)", +
  "GeogAngularUnitsGeoKey=9102(Angular_Degree)", +
  "GeographicTypeGeoKey=4326(GCS_WGS_84)", +
  "GTRasterTypeGeoKey=&rastypstr", +
  "GeogEllipsoidGeoKey=7030(Ellipse_WGS84)")
gtcopy &tempfile1 &tempfile2 size=(&sl,&ss,&nl,&ns)


geomv inp=(&tempfile2,&gridfinal1,&gridfinal3) +
      out=&tempfile3 size=(&slv,&ssv,&nlv,&nsv) znoin=znoin +
      interp=&interp
gtsize (&tempfile3,&fnamein) &outimg 'coverref

plab2tcl &fnamein property=COREG_META_DATA val=rms +
   keyword=ACCURACY vtype=7
if (rms>(-900.0))
   plab2tcl &fnamein property=COREG_META_DATA val=file2 +
      keyword=ACCREF vtype=0
   label-add inp=&outimg items="accuracy=&rms" +
        property="COREG_META_DATA"
   label-add inp=&outimg items="accuracy_unit=pixels" +
        property="COREG_META_DATA"
   label-add inp=&outimg items="accref=&file2" +
        property="COREG_META_DATA"
end-if

write "MSG: PROCESSING COMPLETED"

theend>
end-proc
.TITLE
modwp2ad - warp one additional band of modis
.HELP
PURPOSE
     
	   
CALL
  
  
OPERATION


PERFORMANCE

Restrictions
------------


Original Programmer: A. L. Zobrist, 29 Nov, 2001
Current Cognizant Programmer: A. L. Zobrist
Last change by: A. L. Zobrist, 20 Dec, 2001

.END
