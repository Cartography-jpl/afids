procedure
parm key type=string
parm key2 type=string
parm lsatfile type=string
parm band type=string
parm shortname type=string
parm imgseq type=int

local lsatfileext type=string
local gridfile1 type=string
local gridfile2 type=string
local gridfile3 type=string
local gridfile4 type=string
local gridfile5 type=string
local parfile type=string
local zfile type=string

local tnl int
local tns int
local gnl int
local gns int
local fnl real
local fns real
local gridspace real
local clon real
local clat real
local hsize real
local vsize real
local tmpimgseq int
local waterthresh int
local watercount int
local getzvalwin int
local cclen int
local clen1 int
local clen2 int
local clen3 int
local zclen int
local prprod int
local pchk int
local rchk int
local numimg int

local watermask type=(string,99)
local afidsvdevdata type=(string,99)

body

!  get the path names

let parfile = "&key" // "_params"
asc2tcl &parfile keyword="waterthresh=" val=waterthresh vtype=4
asc2tcl &parfile keyword="watercount=" val=watercount vtype=4
asc2tcl &parfile keyword="getzvalwin=" val=getzvalwin vtype=4
asc2tcl &parfile keyword="numimg=" val=numimg vtype=4
if (imgseq>numimg) goto theend

!  get the filenames

!let lsatfileext = "&lsatfile" // "VNIR_map4.&band" old use
let lsatfileext = "&lsatfile"
let gridfile1 = "scratch/&key2" // "gridfile1"
let gridfile2 = "scratch/&key2" // "gridfile2"
let gridfile3 = "scratch/&key2" // "gridfile3"
let gridfile4 = "scratch/&key2" // "gridfile4"
let gridfile5 = "scratch/&key2" // "gridfile5"
let zfile = "&key" // "_&band" // "_zfile"

!  calculate the grid then gen the grid

asc2tcl &parfile keyword="gridspace=" val=gridspace vtype=8
write "gridspace &gridspace parfile &parfile"

lab2tcl &shortname v1=tnl v2=tns keyword=(nl,ns) 'system
let fnl = $float(tnl)*1.1
let fns = $float(tns)*1.1
ibis-gen &gridfile1 nc=10 nr=2 +
   format=("DOUB","DOUB","DOUB","DOUB","DOUB","DOUB","DOUB","DOUB","FULL","FULL") +
   datacol=(1,2) data=(1.0,1.0,&fnl,&fns)
pixmap (&gridfile1,&shortname) mapcols=(3,4) pixcols=(1,2) 'pixtomap
mf3 &gridfile1 f=("c5=c3-@mod(c3,&gridspace)$c6=c4-@mod(c4,&gridspace)$", +
   "c7=c5$c8=c6$@diff(c7)$@diff(c8)$c7=c7/(&gridspace)$c8=-c8/(&gridspace)$", +
   "c9=c7+0.5$c10=c8+0.5$@vmin(c5)$@vmin(c6)")
ibis-l &gridfile1 nr=4

ibis2tcl &gridfile1 v1=gnl v2=gns vartype=(1,1) ibisloc=(2,9,2,10)
ibis2tcl &gridfile1 v1=clon v2=clat vartype=(-1,-1) ibisloc=(1,5,1,6)
let hsize = gridspace*$float(gns)
let vsize = gridspace*$float(gnl)
write "hsize &hsize vsize &vsize"
write "gns &gns gnl &gnl"
write "clon &clon clat &clat"

gengrid &gridfile2 ncol=11 nah=&gns nav=&gnl +
    hbase=&clat hsize=&hsize vbase=&clon vsize=&vsize
ibis-l &gridfile2 'format nr=15

!  get the z values and prune

ibis2tcl &gridfile2 vclen=zclen vartype=1
if (zclen>0)
   pixmap (&gridfile2,&shortname) mapcols=(1,2) pixcols=(3,4) 'maptopix
   getzval (&shortname,&gridfile2) cols=(3,4,5,6) win=&getzvalwin +
      reject=&watercount threject=&waterthresh
   rowop2 &gridfile2 &gridfile3 keycol=5 +
      range=(&waterthresh,65536.5) 'select
else
   ibis-copy &gridfile2 &gridfile3
end-if
ibis-l &gridfile3 'format nr=15

!  do a world waterfile reject here

translog AFIDS_VDEV_DATA afidsvdevdata
let watermask = "&afidsvdevdata/world_30as_lwm.img"

gtproj2 (&gridfile3,&shortname,&watermask) incol=(1,2) outcol=(7,8)
watermask &gridfile3 &gridfile4 cols=(7,8,9,10,11)
write "watermask result"
! ibis-l &gridfile3 nr=3
! ibis-l &gridfile4 nr=3

!  take off the watermask columns, later catfiles sensitive to #cols

ibis-copy &gridfile4 &gridfile3 nc=6

!  cat to the z_file, rerunnable

ibis-gen &gridfile4 nr=1 nc=7 +
      format=("A50","A3","FULL","FULL","FULL","FULL","FULL")
icat (&gridfile4,&gridfile3) &gridfile5 'h

mf3 &gridfile5 +
   f="c1=@ljust('&lsatfileext',50)"
mf3 &gridfile5 f="c2=@ljust('&shortname',3)"

!!!mf3 &gridfile5 f="c3=@num(@fstr(@bstr(c1,@pos(c1,'p')),3))"
!!!mf3 &gridfile5 f="c4=@num(@fstr(@bstr(c1,@pos(c1,'r')),2))"
mf3 &gridfile5 f=("c6=c8*10000.0+(c8>=0)*0.5-(c8<0)*0.5$", +
  "c7=c9*10000.0+(c9>=0)*0.5-(c9<0)*0.5$c5=&imgseq")
! ibis-l &gridfile5 'format csiz=(50,3,6,6) nr=3 +
!      cfor="%50s%3s%6d%6d" cols=(1,2,3,4)
! ibis-l &gridfile5 nr=3

ibis2tcl &gridfile5 v1=tmpimgseq vartype=(1,1) ibisloc=(1,5)
rowop2 &zfile &gridfile1 keycol=(5) range=(&tmpimgseq,&tmpimgseq) +
    prec=0.1 'delete

ibis2tcl &gridfile1 vclen=clen1 vartype=1
ibis2tcl &gridfile5 vclen=clen2 vartype=1
let clen3 = clen1+clen2
if (clen1=0)
   ibis-copy &gridfile5 &zfile
else
   icat (&gridfile1,&gridfile5) &zfile
end-if

! ibis-l &zfile nr=3

theend>
end-proc
