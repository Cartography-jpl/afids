procedure help=*

parm subdir type=string
parm preroot type=string
parm postroot type=string
parm outtabroot type=string
parm minsize int default=3
parm maxsize int default=40
parm ratiofile string
parm ratonly int default=0
parm dnorm int
parm dthresh int count=0:100
parm difthr int count=0:100
parm priority int count=0:100 +
 default=(2,2,2,1,1,1,2,2,1,2,1,0,0,0,0)
parm minsigma real default=1.0
parm pixdbg type=int count=2 default=(999999,999999)

local nxprepan string
local nxpostpan string

local nxpost1 string
local nxpost2 string
local nxpost3 string
local nxpost4 string
local nxpost5 string
local nxpost6 string
local nxpost7 string
local nxpost8 string

local prepan string
local postpan string

local post10 string
local post20 string
local post30 string
local post40 string
local post50 string
local post60 string
local post70 string
local post80 string

local pandif string
local pannorm string
local rat23 string
local rat34 string
local rat45 string
local rat56 string
local rat14 string
local rat46 string
local rat68 string
local rat35 string

local nxprepanbyte string
local nxpostpanbyte string
local nxred string
local nxgrn string
local nxblu string
local chiptif string
local outimg string
local outimgcc string
local xxxim4 string
local xxxim5 string
local xxxim6 string
local outibis string
local outibiscc string
local lnstring string
local numrec int

refgbl $echo
refgbl $autousage
refgbl $syschar

body

let $autousage = "none"
let _onfail="return"
let $echo="yes"

write "detwvpan Thurs Jun 23 2011"

let prepan = "&preroot" // "_pan.img"
let postpan = "&postroot" // "_pan.img"

let post10= "&postroot" // "_b1.img"
let post20= "&postroot" // "_b2.img"
let post30= "&postroot" // "_b3.img"
let post40= "&postroot" // "_b4.img"
let post50= "&postroot" // "_b5.img"
let post60= "&postroot" // "_b6.img"
let post70= "&postroot" // "_b7.img"
let post80= "&postroot" // "_b8.img"

! subdir contents

let nxprepan = "&subdir" // "/nxprepan"
let nxpostpan = "&subdir" // "/nxpostpan"

let nxpost1 = "&subdir" // "/nxpost1"
let nxpost2 = "&subdir" // "/nxpost2"
let nxpost3 = "&subdir" // "/nxpost3"
let nxpost4 = "&subdir" // "/nxpost4"
let nxpost5 = "&subdir" // "/nxpost5"
let nxpost6 = "&subdir" // "/nxpost6"
let nxpost7 = "&subdir" // "/nxpost7"
let nxpost8 = "&subdir" // "/nxpost8"
let nxprepanbyte = "&subdir" // "/nxprepanbyte"
let nxpostpanbyte = "&subdir" // "/nxpostpanbyte"
let nxred = "&subdir" // "/&outtabroot" // ".nxred"
let nxgrn = "&subdir" // "/&outtabroot" // ".nxgrn"
let nxblu = "&subdir" // "/&outtabroot" // ".nxblu"
let chiptif = "&subdir" // "/&outtabroot" // "_cc.tif"
let outimg = "&subdir" // "/&outtabroot" // ".img"
let outimgcc = "&subdir" // "/&outtabroot" // "_cc.img"

let pandif = "&subdir" // "/pandif"
let rat23 = "&subdir" // "/rat23"
let rat34 = "&subdir" // "/rat34"
let rat45 = "&subdir" // "/rat45"
let rat56 = "&subdir" // "/rat56"
let rat14 = "&subdir" // "/rat14"
let rat46 = "&subdir" // "/rat46"
let rat68 = "&subdir" // "/rat68"
let rat35 = "&subdir" // "/rat35"

let xxxim4 = "&subdir" // "/xxxim4"
let xxxim5 = "&subdir" // "/xxxim5"
let xxxim6 = "&subdir" // "/xxxim6"
let outibis = "&subdir" // "/&outtabroot" // ".asc"
let outibiscc = "&subdir" // "/&outtabroot" // "_cc.asc"

!   ush rm -f &nxprepan        NOW CALCULATED BY CVDNORM BELOW
!   let lnstring = "ln -s ../&prepan &nxprepan"
!   ush &lnstring

!   ush rm -f &nxpostpan
!   let lnstring = "ln -s ../&postpan &nxpostpan"
!   ush &lnstring

   ush rm -f &nxpost1
   let lnstring = "ln -s ../&post10 &nxpost1"
   ush &lnstring

   ush rm -f &nxpost2
   let lnstring = "ln -s ../&post20 &nxpost2"
   ush &lnstring

   ush rm -f &nxpost3
   let lnstring = "ln -s ../&post30 &nxpost3"
   ush &lnstring

   ush rm -f &nxpost4
   let lnstring = "ln -s ../&post40 &nxpost4"
   ush &lnstring

   ush rm -f &nxpost5
   let lnstring = "ln -s ../&post50 &nxpost5"
   ush &lnstring

   ush rm -f &nxpost6
   let lnstring = "ln -s ../&post60 &nxpost6"
   ush &lnstring

   ush rm -f &nxpost7
   let lnstring = "ln -s ../&post70 &nxpost7"
   ush &lnstring

   ush rm -f &nxpost8
   let lnstring = "ln -s ../&post80 &nxpost8"
   ush &lnstring

!  normalization of the pan band

cvdnorm (&prepan,&postpan) +
   out=(&nxprepan,&nxpostpan) +
   sigma=(1.0,1.0) printls=(99999,99999) window=11 donut=5 'nopre

!  run for all detections, no overlay count, hence no plastics and road disturb

f2ratio inp=(&nxprepan,&nxpostpan, +
   &nxpost1,&nxpost2,&nxpost3,&nxpost4, +
   &nxpost5,&nxpost6,&nxpost7,&nxpost8,&ratiofile) +
   out=(&xxxim4,&pandif) +
   fcase=2 option=0 pan=1 shadow=80.0 diffac=0.0 ratonly=&ratonly +
   dnorm=&dnorm priority=&priority minsigma=&minsigma pixdbg=&pixdbg +
   dthresh=&dthresh +
   difthr=&difthr
   

cform &nxprepan &nxprepanbyte irange=(1,5000) orange=(0,255) oform=byte
cform &nxpostpan &nxpostpanbyte irange=(1,5000) orange=(0,255) oform=byte

! connected component

cform &xxxim4 &xxxim5 oform=full
concomp &xxxim5 (&xxxim6, xxxim6work)
comptab inp=(&xxxim6, &xxxim5) out=xxxltab.ibis
getzval (&xxxim4, xxxltab.ibis) cols=(3,4,11) 'NOIN

mf3 xxxltab.ibis f="c17=c5/c2"
!rowop2 xxxltab.ibis xxxouttabx keycol=17 range=(0.0,0.51) 'select
rowop2 xxxltab.ibis xxxouttabx keycol=17 range=(0.0,0.45) 'select
rowop2 xxxouttabx outtab keycol=2 range=(&minsize,&maxsize) 'select

compject (&xxxim6, outtab) out=&outimg cols=(1,11)
pixmap (outtab, &outimg) mapcols=(9,10) pixcol=(3,4) 'pixtomap
ibis-l outtab cols=(1,9,10,11) 'noheader 'nocol +
   outfile=&outibis cfor="%7d %15.8f %14.8f %7.0f"

! paint the objects in alternate byte images

ibis-gen xxxpaint nr=13 nc=4 deffmt=FULL datacol=(1,2,3,4) +
 data=(1,172,172,255,      2,200,133,100,    3,200,255,200,  4,255,128,128,  +
       5,255,0,0,    6,255,255,0,      7,255,255,160,    8,80,255,80,  +
       9,255,160,160,   10,255,255,255,     11,250,100,25,   12,0,0,1,  +
      13,0,0,2)
ibis-l xxxpaint

paint (&outimg,xxxpaint) xxxtest1 cols=(1,2)
paint (&outimg,xxxpaint) xxxtest2 cols=(1,3)
paint (&outimg,xxxpaint) xxxtest3 cols=(1,4)

f2multi inp=(&outimg,xxxtest1,xxxtest2,xxxtest3,&nxprepanbyte) +
   out=(&nxred,&nxgrn,&nxblu) fcase=3

! saving for future release
goto theend

! detect again for connected component overlay count

f2ratio inp=(&nxprepan,&nxpostpan, +
   &nxpost1,&nxpost2,&nxpost3,&nxpost4, +
   &nxpost5,&nxpost6,&nxpost7,&nxpost8,&ratiofile) +
   out=(&xxxim4,&pandif) +
   fcase=2 option=0 pan=1 shadow=80.0 diffac=0.0 ratonly=&ratonly +
   dnorm=&dnorm priority=&priority minsigma=&minsigma pixdbg=&pixdbg +
   dthresh=&dthresh +
   difthr=&difthr

! connected component

cform &xxxim4 &xxxim5 oform=full
concomp &xxxim5 (&xxxim6, xxxim6work)
comptab inp=(&xxxim6, &xxxim5) out=xxxltab.ibis
getzval (&xxxim4, xxxltab.ibis) cols=(3,4,11) 'NOIN
rowop2 xxxltab.ibis outtab keycol=2 range=(&minsize,&maxsize) 'select
compject (&xxxim6, outtab) out=&outimgcc cols=(1,11)

! overlay count, number of unique materials near a point

mooresc &outimgcc (xxxx1,xxxx1p) dmax=40 pixval=(1,2,3,4,5,6,7,8,9,10,11,12,13) numpix=13
f2 xxxx1 xxxx2 fun="(in1-1)*(in1>0)"
cform xxxx2 xxxx3 oform=half
concomp xxxx3 (xxxx4, xxxx4work)
comptab inp=(xxxx4, xxxx3) out=xxxltabcc.ibis
getzval (xxxx1p, xxxltabcc.ibis) cols=(3,4,11) 'NOIN
rowop2 xxxltabcc.ibis outtabcc keycol=2 range=(1,999999) 'select
pixmap (outtabcc,&outimgcc) mapcols=(9,10) pixcol=(3,4) 'pixtomap
ibis-l outtabcc cols=(1,9,10,11) 'noheader 'nocol +
   outfile=&outibiscc cfor="%7d %15.8f %14.8f %7.0f"

! now relying on Peter's program for display, but need color image

ibis-gen xxxpaint nr=13 nc=4 deffmt=FULL datacol=(1,2,3,4) +
 data=(1,172,172,255,      2,200,133,100,    3,200,255,200,  4,255,128,128,  +
       5,255,0,0,    6,255,255,0,      7,255,255,160,    8,80,255,80,  +
       9,255,160,160,   10,255,255,255,     11,250,100,25,   12,0,0,1,  +
      13,0,0,2)
ibis-l xxxpaint

paint (&outimgcc,xxxpaint) xxxtest1 cols=(1,2)
paint (&outimgcc,xxxpaint) xxxtest2 cols=(1,3)
paint (&outimgcc,xxxpaint) xxxtest3 cols=(1,4)

f2multi inp=(&outimgcc,xxxtest1,xxxtest2,xxxtest3,&nxprepanbyte) +
   out=(xxxcolorsepred,xxxcolorsepgrn,xxxcolorsepblu) fcase=3

ibis2tcl outtabcc vclen=numrec vartype=1
ibis-gen xxxq1q173 nc=4 nr=&numrec format=("FULL","DOUB","DOUB","FULL")
acopin (&outibiscc,xxxq1q173) cols=(1,2,3,4)
ibis-l xxxq1q173 csiz=(16,16,16,16) cfor="%8d %12.8f %16.8f %8d"
ibis2tcl xxxq1q173 vclen=numrec vartype=1
if (numrec=0) goto theend

chipper2 inp=(xxxq1q173,&nxprepanbyte,xxxcolorsepred,xxxcolorsepgrn, +
   xxxcolorsepblu,&nxpostpanbyte) +
   out=(xxxq4r173,xxxq4g173,xxxq4b173) cols=(2,3) +
   inpstack=(1,3,1)

vtiff3-fromvic inp=(xxxq4r173,xxxq4g173,xxxq4b173) out=&chiptif

theend>
end-proc
.TITLE
DETWVPAN - World view detection algorithm, with Pan change detection
.HELP
PURPOSE
     Reads band ratio means and sigmas from an IBIS file output by the
     genetic algorithm.  Applies to a set of World View 8 band images
     to find the pixels of each category.

     Uses distance from the means (in sigma units) to find the nearest
     category.

     Writes the outputs into the output directory named by parameter subdir.

CALL
     detwvpan subdir="PTEST_10MAY21_10MAY16" +
 preroot="data_w/may21rd" postroot="data_w/may16rd" +
 outtabroot="P_10MAY21_10MAY16" minsize=3 maxsize=100 +
 ratonly=0 ratiofile=product_all_classes.int +
 dnorm=1 dthresh=(40,20,20,20,20,20,20,20,20,20,20, +
 20,20,20,20) +
 difthr=(2900,3700,3700,3700,3700, +
 3700,3700,3700,3700,3700,3700,3700,3700,3700,3700) +
 priority=(2,2,2,1,1,1,2,2,1,2,1,0,0,0,0) minsigma=1.0 pixdbg=(50001,51001)

OPERATION

see above.

PERFORMANCE

.PAGE
Restrictions
------------

The input images must be in VICAR format.  The input pan images must be
registered (by AFIDS).


.PAGE
Original Programmer: A. L. Zobrist, 9 June, 2011
Current Cognizant Programmer: Mike Smyth
.LEVEL1
.VARI subdir
name of subdir for results
.VARI preroot
subdir/prefix for input files
.VARI postroot
subdir/prefix for input files
.VARI outtabroot
file root for output n ascii
.VARI minsize
minimum size for connected
component
.VARI maxsize
maximum size for connected
component
.VARI ratiofile
input filename for ratios 
selected by genetic algorithm
.VARI ratonly
use only the ratios to classify
.VARI dnorm
which norm function to use
1 - use l1 norm
2 - use modified l2 norm
3 - use l-infinity norm
.VARI dthresh
vector of pan difference
thresholds for each class
.VARI difthr
vector of distance
thresholds for each class
.VARI priority
vector of detection priorities
see help 2
.VARI minsigma
sigmas smaller will be set to
this value
.VARI pixdbg
set to (line,samp) to debug
print for a single pixel
.LEVEL1
.VARI priority
if a single pixel falls into multiple categories, it will be assigned to the
highest priority.  Within a priority, it will be assigned to the nearest category
of ground cover in the metric chosen by parameter dnorm.
.END

                                                              46,1          Top

