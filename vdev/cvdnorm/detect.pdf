procedure

parm path type=string default="/raid12/nevada/"
parm rootpre type=string default="L5040034_03420090714_"
parm rootpost type=string default="L5040034_03420090730_"
parm outtab_asc type=string default="outtab_asc"

local pre20sig real
local post20sig real
local pre30sig real
local post30sig real

local pre10sig real
local post10sig real
local pre40sig real
local post40sig real

local pre50sig real
local post50sig real
local pre60sig real
local post60sig real

local prebgsig real
local postbgsig real
local prendvisig real
local postndvisig real
local metafilepre string
local cloudmaskpre string
local metafilepost string
local cloudmaskpost string

local bigmaskpre string
local bigmaskpost string

local cloudmask string
local lnstr string
local qexist integer

refgbl $echo
refgbl $autousage
refgbl $syschar
body
let $autousage = "none"
let _onfail="return"
let $echo="yes"
write "detect 02/19/2010"

let metafilepre = "&path" // "&rootpre" // "MTL.txt"
let cloudmaskpre = "&rootpre" // "cloud.img"
let lnstr = "&path" // "&rootpre" // "B10.img"
ush ln -fs &lnstr pre10r
let lnstr = "&path" // "&rootpre" // "B20.img"
ush ln -fs &lnstr pre20r
let lnstr = "&path" // "&rootpre" // "B30.img"
ush ln -fs &lnstr pre30r
let lnstr = "&path" // "&rootpre" // "B40.img"
ush ln -fs &lnstr pre40r
let lnstr = "&path" // "&rootpre" // "B50.img"
ush ln -fs &lnstr pre50r

let lnstr = "&path" // "&rootpre" // "B60.img"
file2tcl &lnstr val=qexist
if (qexist=1) ush ln -fs &lnstr pre60
let lnstr = "&path" // "&rootpre" // "B61.img"
file2tcl &lnstr val=qexist
if (qexist=1) ush ln -fs &lnstr pre60


let metafilepost = "&path" // "&rootpost" // "MTL.txt"
let cloudmaskpost = "&rootpost" // "cloud.img"
let cloudmask = "&rootpost" // "cmbcloud.img"
let lnstr = "&path" // "&rootpost" // "B10.img"
ush ln -fs &lnstr post10r
let lnstr = "&path" // "&rootpost" // "B20.img"
ush ln -fs &lnstr post20r
let lnstr = "&path" // "&rootpost" // "B30.img"
ush ln -fs &lnstr post30r
let lnstr = "&path" // "&rootpost" // "B40.img"
ush ln -fs &lnstr post40r
let lnstr = "&path" // "&rootpost" // "B50.img"
ush ln -fs &lnstr post50r

let lnstr = "&path" // "&rootpost" // "B60.img"
file2tcl &lnstr val=qexist
if (qexist=1) ush ln -fs &lnstr post60
let lnstr = "&path" // "&rootpost" // "B61.img"
file2tcl &lnstr val=qexist
if (qexist=1) ush ln -fs &lnstr post60
  
let bigmaskpre = "&rootpre" // "lsatpre.img"
let bigmaskpost = "&rootpost" // "lsatpost.img"

! cloudmask then reflectance

acca (pre20r,pre30r,pre40r,pre50r,pre60) +
  meta=&metafilepre out=&cloudmaskpre
!xvd &cloudmaskpre

acca (post20r,post30r,post40r,post50r,post60) +
  meta=&metafilepost out=&cloudmaskpost
!xvd &cloudmaskpost

f2 inp=(&cloudmaskpre,&cloudmaskpost) out=&cloudmask +
   fun="max(in1,in2)"
!xvd &cloudmask

multilsatref inp=(pre10r,pre20r,pre30r,pre40r,pre50r) +
   out=(pre10,pre20,pre30,pre40,pre50) +
   meta=&metafilepre

multilsatref inp=(post10r,post20r,post30r,post40r,post50r) +
   out=(post10,post20,post30,post40,post50) +
   meta=&metafilepost

!hist pre20 'exclude sigma=pre20sig mode=nohist
!hist post20 'exclude sigma=post20sig mode=nohist
!hist pre30 'exclude sigma=pre30sig mode=nohist
!hist post30 'exclude sigma=post30sig mode=nohist

!hist pre10 'exclude sigma=pre10sig mode=nohist
!hist post10 'exclude sigma=post10sig mode=nohist
!hist pre40 'exclude sigma=pre40sig mode=nohist
!hist post40 'exclude sigma=post40sig mode=nohist

!hist pre50 'exclude sigma=pre50sig mode=nohist
!hist post50 'exclude sigma=post50sig mode=nohist
!hist pre60 'exclude sigma=pre60sig mode=nohist
!hist post60 'exclude sigma=post60sig mode=nohist

cvdnorm (pre10,pre20,pre30,pre40,pre50,pre60, +
   post10,post20,post30,post40,post50,post60) +
   out=(nxpre1,nxpre2,nxpre3,nxpre4,nxpre5,nxpre6, +
   nxpost1,nxpost2,nxpost3,nxpost4,nxpost5,nxpost6) +
   sigma=(1.0,1.0,1.0,1.0,1.0,1.0, +
   1.0,1.0,1.0,1.0,1.0,1.0) +
   printls=(5863,4093) window=11 donut=5 

!  sigma=(&pre10sig,&pre20sig,&pre30sig,&pre40sig,&pre50sig,&pre60sig, +
!  &post10sig,&post20sig,&post30sig,&post40sig,&post50sig,&post60sig) +

!  bg and nvdi

f2 (nxpre5,nxpre3) out=nxbgpre fun="((in1-in2)/(in1+in2))*200+128"
f2 (nxpost5,nxpost3) out=nxbgpost fun="((in1-in2)/(in1+in2))*200+128"
f2 (nxpre4,nxpre3) out=nxndvipre fun="((in1-in2)/(in1+in2))*200+128"
f2 (nxpost4,nxpost3) out=nxndvipost fun="((in1-in2)/(in1+in2))*200+128"

!hist nxbgpre 'exclude sigma=prebgsig mode=nohist
!hist nxbgpost 'exclude sigma=postbgsig mode=nohist
!hist nxndvipre 'exclude sigma=prendvisig mode=nohist
!hist nxndvipost 'exclude sigma=postndvisig mode=nohist

cvdnorm (nxbgpre,nxndvipre,nxbgpost,nxndvipost) +
   out=(nxbgprenorm,nxndviprenorm,nxbgpostnorm,nxndvipostnorm) +
   sigma=(1.0,1.0,1.0,1.0) +
   printls=(5863,4093) window=11 donut=5 'nopre

!  sigma=(&prebgsig,&prendvisig,&postbgsig,&postndvisig) +

f2 (nxbgprenorm,nxbgpostnorm) out=nxdifbg fun="(in2-in1)*1.1"
f2 (nxndviprenorm,nxndvipostnorm) out=nxdifndvi fun="(in2-in1)*1.8"

! brightness diff

f2 (nxpre1,nxpost1) out=nxdif1 fun="(in2-in1)*4+1"
f2 (nxpre2,nxpost2) out=nxdif2 fun="(in2-in1)*4+1"
f2 (nxpre3,nxpost3) out=nxdif3 fun="(in2-in1)*4+1"
f2 (nxpre4,nxpost4) out=nxdif4 fun="(in2-in1)*4+1"
f2 (nxpre5,nxpost5) out=nxdif5 fun="(in2-in1)*4+1"
f2 (nxpre6,nxpost6) out=nxdif6 fun="(in2-in1)*4+1"

! do target 1

f2 (nxdif1,nxdif2,nxdif3,nxdif4,nxdifbg,nxdifndvi) out=xxxim3 +
  fun="(in1+in2+in3+in4+in5+abs(in6))*0.16667"
f2 (xxxim3) out=xxxim4a fun="(in1.gt.100)*in1"
f2 (xxxim3) out=xxxim5 fun="(in1.gt.70)*in1"

!xvd xxxim3
!xvd xxxim4a
!xvd xxxim5

! cloud cleanup, peter should do the elimination of single pixel clouds
! also mask by band 2, 

f2 (pre10,pre20,pre30,pre40,pre50) out=&bigmaskpre +
  fun="(in1.gt.0.5)*(in2.gt.0.5)*(in3.gt.0.5)*(in4.gt.0.5)*(in5.gt.0.5)"
f2 (post10,post20,post30,post40,post50) out=&bigmaskpost +
  fun="(in1.gt.0.5)*(in2.gt.0.5)*(in3.gt.0.5)*(in4.gt.0.5)*(in5.gt.0.5)"

f2 &cloudmask out=xxxicloud2 fun="1-in1"
moore xxxicloud2 xxxicloud dmax=2 'outone
f2 (&cloudmask,xxxicloud) out=xxxcloud2 fun="(in2.lt.0.5)*in1"
moore xxxcloud2 xxxcloud dmax=50 'outone
f2 (xxxim4a,xxxcloud,&bigmaskpre,&bigmaskpost) out=xxxim4 +
     fun="(in2.lt.0.5)*(in3.gt.0.5)*(in4.gt.0.5)*in1"

! connected component

cform xxxim4 xxxim5 oform=full

concomp xxxim5 (xxxim6, xxxim6work)

!xvd xxxim6

comptab inp=(xxxim6, xxxim5) out=xxxltab.ibis

getzval (xxxim4, xxxltab.ibis) cols=(3,4,11) 'NOIN

rowop2 xxxltab.ibis outtab keycol=2 range=(0, 4) 'select

compject (xxxim6, outtab) out=outtabimg cols=(1,2)

pixmap (outtab, outtabimg) mapcols=(9,10) pixcol=(3,4) 'pixtomap

ibis-l outtab cols=(1,9,10,11) 'noheader 'nocol +
   outfile=&outtab_asc cfor="%7d %15.8f %14.8f %7.0f"

theend>
end-proc
