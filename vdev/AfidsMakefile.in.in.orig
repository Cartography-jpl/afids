# This makefile is for stand alone building of code. Normally you use the
# automake Makefile generated by configure during a build, but for debugging
# and stand alone programs it can be useful to have this defined.

#==============================================================
# Flags to build with. 

# DEBUG = t
ifdef DEBUG
CFLAGS = -ggdb -fbounds-check
FFLAGS = -ggdb -fbounds-check -ffixed-line-length-none
else
CFLAGS = @CFLAGS@
FFLAGS = @FFLAGS@ -ffixed-line-length-none
endif

#==============================================================
# Compiler to use
CC = @CC@
F77 = @F77@
CPPFLAGS = -I$(AFIDSTOP)/include -I$(VICARTOP)/include/vicar_rtl
LIBTOOL = $(AFIDSTOP)/bin/libtool

#==============================================================
# Extra linker flags, if any
LDFLAGS =

#==============================================================
# Generic rules for building C and Fortran.

# Block the default rules and use mine instead
.SUFFIXES: 

%.o: %.c
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

%: %.o  
	$(LIBTOOL) --tag=CC --mode=link $(CC) $(CFLAGS) -no-fast-install -o $@ $^ -L$(AFIDSTOP)/lib -lcarto $(LDFLAGS)
	-rm $(patsubst %.o, %.lo, $(filter %.o, $^))

%._f.o: %.f
	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(FFLAGS) $(CPPFLAGS) -c -o $@ $< 

%._f.o: %.F
	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(FFLAGS) $(CPPFLAGS) -c -o $@ $< 

%: %._f.o
	$(LIBTOOL) --tag=F77 --mode=link $(F77) $(FFLAGS) -no-fast-install -o $@ $^ -L$(AFIDSTOP)/lib -lcarto $(LDFLAGS)
	-rm $(patsubst %.o, %.lo, $(filter %.o, $^))

.deps/%.d: %.c
	-rm $@
	mkdir -p .deps && \
        $(CC) -M $(CFLAGS) $(CPPFLAGS) $< > $@.$$$$ && \
        sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@ && \
        rm -f $@.$$$$

# We can't get the dependencies of fortran in the same way.
.deps/%.d: %.f
	mkdir -p .deps
	touch $@

.deps/%.d: %.F
	mkdir -p .deps
	touch $@

all: $(PROG_LIST)

clean:
	-rm *.o
	-rm *.lo
	-rm -r .deps
	-rm $(PROG_LIST)

.INTERMEDIATE: echo $(patsubst %.c,%.o,$(wildcard *.c)) $(patsubst %.f,%._f.o,$(wildcard *.f)) $(patsubst %.F,%._f.o,$(wildcard *.F))

include $(filter %.d, $(patsubst %,.deps/%.d,$(PROG_LIST)))
