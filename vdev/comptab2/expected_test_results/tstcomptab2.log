tstcomptab2
 Trivial Test for comptab2
gen xxx1 nl=7 ns=7 'half
Beginning VICAR task gen
GEN Version 6
GEN task completed
f2 xxx1 out=xxx2 func="line*((samp<5)+(samp>5))"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 calculating every pixel
FUNCTION EVALUATED 49 TIMES
list xxx2
Beginning VICAR task list

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:afids     Date_Time:Tue Sep 17 17:53:17 2019
 Task:F2        User:afids     Date_Time:Tue Sep 17 17:53:17 2019
     Samp       1     2     3     4     5     6     7
   Line
      1         1     1     1     1     0     1     1
      2         2     2     2     2     0     2     2
      3         3     3     3     3     0     3     3
      4         4     4     4     4     0     4     4
      5         5     5     5     5     0     5     5
      6         6     6     6     6     0     6     6
      7         7     7     7     7     0     7     7
concomp xxx2 (xxx4,xxx3)
Beginning VICAR task concomp
concomp version Thu Jul  3 2014
list xxx4
Beginning VICAR task list

   FULL     samples are interpreted as FULLWORD data
 Task:GEN       User:afids     Date_Time:Tue Sep 17 17:53:17 2019
 Task:CONCOMP   User:afids     Date_Time:Tue Sep 17 17:53:17 2019
     Samp            1          2          3          4          5          6          7
   Line
      1              1          1          1          1          0          2          2
      2              1          1          1          1          0          2          2
      3              1          1          1          1          0          2          2
      4              1          1          1          1          0          2          2
      5              1          1          1          1          0          2          2
      6              1          1          1          1          0          2          2
      7              1          1          1          1          0          2          2
comptab2 (xxx4,xxx2) ib4
Beginning VICAR task comptab2
comptab2 version Thu Nov  6 2017
ibis-li ib4
Beginning VICAR task ibis
 
Number of Rows:2  Number of Columns: 23      
File Version:IBIS-2  Organization:COLUMN  SubType:NONE
 
Rows: 1:2
+-----------+-----------+-----------+-----------+-----------+-----------
         C:1         C:2         C:3         C:4         C:5         C:6
+-----------+-----------+-----------+-----------+-----------+-----------
           1           0           0           0        6.78        4.00
           2           0           0           0        6.16        4.00
 
Rows: 1:2
+-----------+-----------+-----------+-----------+-----------+-----------
         C:7         C:8         C:9        C:10        C:11        C:12
+-----------+-----------+-----------+-----------+-----------+-----------
        2.50        0.00        0.00        0.00        0.00        4.00
        6.50        0.00        0.00        0.00        0.00        4.00
 
Rows: 1:2
+-----------+-----------+-----------+-----------+-----------+-----------
        C:13        C:14        C:15        C:16        C:17        C:18
+-----------+-----------+-----------+-----------+-----------+-----------
        4.00        0.00        0.00        0.00        0.00        0.00
        4.00        0.00        0.00        0.00        0.00        0.00
 
Rows: 1:2
+-----------+-----------+-----------+-----------+-----------
        C:19        C:20        C:21        C:22        C:23
+-----------+-----------+-----------+-----------+-----------
        0.00        0.00        0.00        0.00        0.00
        0.00        0.00        0.00        0.00        0.00
let $echo="no"
Trivial test done

Show abort when an image is compressed

 Notice label-li does not directly reveal compression
comprs xxx4 xxx4c compress="basic"
Beginning VICAR task comprs
label-li xxx4c
Beginning VICAR task label
************************************************************
 
        ************  File xxx4c ************
                3 dimensional IMAGE file
                File organization is BSQ
                Pixels are in FULL format from a X86-LINUX host
                1 bands
                7 lines per band
                7 samples per line
                0 lines of binary header
                0 bytes of binary prefix per line
---- Task: GEN -- User: afids -- Tue Sep 17 17:53:17 2019 ----
IVAL=0.0
SINC=1.0
LINC=1.0
BINC=1.0
MODULO=0.0
---- Task: F2 -- User: afids -- Tue Sep 17 17:53:17 2019 ----
FUNCTION='line*((samp<5)+(samp>5))'
---- Task: CONCOMP -- User: afids -- Tue Sep 17 17:53:17 2019 ----
---- Task: COMPRS -- User: afids -- Tue Sep 17 17:53:17 2019 ----
 
************************************************************
comprs xxx2 xxx2c compress="basic2"
Beginning VICAR task comprs
label-li xxx2c
Beginning VICAR task label
************************************************************
 
        ************  File xxx2c ************
                3 dimensional IMAGE file
                File organization is BSQ
                Pixels are in HALF format from a X86-LINUX host
                1 bands
                7 lines per band
                7 samples per line
                0 lines of binary header
                0 bytes of binary prefix per line
---- Task: GEN -- User: afids -- Tue Sep 17 17:53:17 2019 ----
IVAL=0.0
SINC=1.0
LINC=1.0
BINC=1.0
MODULO=0.0
---- Task: F2 -- User: afids -- Tue Sep 17 17:53:17 2019 ----
FUNCTION='line*((samp<5)+(samp>5))'
---- Task: COMPRS -- User: afids -- Tue Sep 17 17:53:17 2019 ----
 
************************************************************
comptab2 (xxx4c,xxx2c) ib4c
Beginning VICAR task comptab2
comptab2 version Thu Nov  6 2017
 input image 1 - BASIC compression

 input image 2 - BASIC2 compression

??E - One or more of images are compressed
??E - Compressed images are illegal for comptab2
 ** ABEND called **
continue
let $echo="no"
ABORT is normal

Do a REAL example 
   Test Water vs Land Transforms in Southern CA
Note: These images are compressed

gtcopy ct/n30w120_band1 tb1.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band2 tb2.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band3 tb3.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band4 tb4.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band5 tb5.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band61 tb61.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band62 tb62.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
gtcopy ct/n30w120_band7 tb7.img size=(1,3791,3790,3790)
Beginning VICAR task gtcopy
gtcopy version Thu Jan 10 2008
f2      inp=(tb2.img,tb4.img) out=test1.img  +
        func="100*(((in1-in2)/(in1+in2))+1)"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 using byte table lookup
FUNCTION EVALUATED 65536 TIMES
hist    test1.img
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
         43*         7
         44         12
         45         25
         46        164
         47        287
         48        383
         49        386
         50        561
         51        636
         52        718
         53        810
         54        898
         55        917
         56       1090
         57       1180
         58       1232
         59       1358
         60       1588
         61       2130
         62       2519
         63       3437
         64       4224
         65       5478
         66       6533
         67       8241
         68      11180 *
         69      13228 *
         70      17417 *
         71      22522 **
         72      28766 **
         73      35857 ***
         74      44195 ****
         75      54880 *****
         76      65079 ******
         77      79228 ********
         78      94580 *********
         79     113420 ***********
         80     119080 ************
         81     149885 ***************
         82     155864 ****************
         83     179011 ******************
         84     192382 ********************
         85     208487 *********************
         86     233846 ************************
         87     236479 ************************
         88     274176 ****************************
         89     279542 *****************************
         90     299105 *******************************
         91     313718 ********************************
         92     328265 **********************************
         93     348773 ************************************
         94     367046 **************************************
         95     371733 **************************************
         96     381724 ***************************************
         97     397760 *****************************************
         98     401852 *****************************************
         99     480229 **************************************************  2
        100     291829 ******************************
        101     482744 **************************************************  1
        102     408228 ******************************************
        103     410852 ******************************************
        104     395375 *****************************************
        105     391266 ****************************************
        106     372143 **************************************
        107     351248 ************************************
        108     343169 ***********************************
        109     329800 **********************************
        110     335494 **********************************
        111     349809 ************************************
        112     350084 ************************************
        113     360206 *************************************
        114     317808 *********************************
        115     285659 *****************************
        116     254683 **************************
        117     225222 ***********************
        118     203880 *********************
        119     195107 ********************
        120     182407 ******************
        121     151624 ***************
        122     117684 ************
        123     101053 **********
        124      86144 ********
        125      71088 *******
        126      52021 *****
        127      49027 *****
        128      49211 *****
        129      47594 ****
        130      46354 ****
        131      41584 ****
        132      31937 ***
        133      20839 **
        134       9160
        135       4318
        136       2381
        137       1521
        138       1364
        139       1117
        140       1012
        141       1012
        142       1060
        143       1028
        144       1180
        145       1255
        146       1473
        147       1732
        148       3184
        149       3689
        150       3805
        151       7792
        152      16150 *
        153      25245 **
        154      37269 ***
        155      50105 *****
        156      65625 ******
        157      32934 ***
        158      23797 **
        159      11976 *
        160       2116
        161       1655
        162        534
        163        438
        164        268
        165        200
        166        158
        167         86
        168         49
        169         32
        170         28
        171         17
        172         10
        173          9
        174          1
        175          6
        177*         3
        178          1
        179          3
        180          2
        183*         1
        188*         1
        191*         1
        192          1

AVERAGE GRAY LEVEL=102.3843
STANDARD DEVIATION=14.80919
NUMBER ELEMENTS=  14364100
MIN. DN=        43
MAX. DN=       192

f2      inp=(tb2.img,tb5.img) out=test2.img  +
        func="100*(((in1-in2)/(in1+in2))+1)"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 using byte table lookup
FUNCTION EVALUATED 65536 TIMES
hist    test2.img
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
         49*         1
         51*         2
         52          4
         53          9
         54          6
         55         12
         56         18
         57         36
         58         94
         59        132
         60        243
         61        540
         62        997
         63       2060
         64       4191
         65       8142
         66      16804 *
         67      30336 **
         68      56313 ***
         69      98259 ******
         70     153258 **********
         71     212016 ***************
         72     258216 ******************
         73     311944 **********************
         74     372723 **************************
         75     445329 *******************************
         76     527358 *************************************
         77     597117 ******************************************
         78     656251 **********************************************
         79     679791 ************************************************
         80     731388 **************************************************  1
         81     706257 **************************************************  2
         82     690609 ************************************************
         83     674707 ***********************************************
         84     631286 ********************************************
         85     570049 ****************************************
         86     547057 **************************************
         87     470765 *********************************
         88     455553 ********************************
         89     399960 ****************************
         90     359914 *************************
         91     316131 **********************
         92     285981 ********************
         93     261059 ******************
         94     237913 ****************
         95     225181 ***************
         96     217207 ***************
         97     212952 ***************
         98     202806 **************
         99     192213 *************
        100     179026 ************
        101     160282 ***********
        102     138357 *********
        103     118823 ********
        104     101066 *******
        105      86875 ******
        106      74757 *****
        107      64388 ****
        108      55276 ***
        109      46303 ***
        110      39691 **
        111      33309 **
        112      27258 *
        113      24234 *
        114      19549 *
        115      15881 *
        116      12549
        117      10475
        118       7928
        119       6278
        120       4614
        121       3597
        122       2462
        123       1979
        124       1433
        125       1079
        126        931
        127        744
        128        628
        129        625
        130        537
        131        488
        132        506
        133        569
        134        413
        135        427
        136        458
        137        450
        138        571
        139        518
        140        579
        141        677
        142        850
        143       1056
        144       1346
        145       2148
        146       2659
        147       3572
        148       7320
        149      11551
        150       9345
        151      16905 *
        152      16897 *
        153      17810 *
        154      17607 *
        155      19971 *
        156      24026 *
        157      26685 *
        158      26643 *
        159      26925 *
        160      15319 *
        161      26832 *
        162       5988
        163       6877
        164       2342
        165       1416
        166        864
        167        587
        168        422
        169        375
        170        283
        171        252
        172        178
        173        177
        174        147
        175        145
        176        113
        177         92
        178         73
        179         79
        180         63
        181         50
        182         55
        183         36
        184         35
        185         37
        186         23
        187         25
        188         26
        189         27
        190          7
        191         15
        192         13
        193          9
        194          4
        195         10
        196          4
        197          3
        200*         1

AVERAGE GRAY LEVEL=86.37752
STANDARD DEVIATION=13.82596
NUMBER ELEMENTS=  14364100
MIN. DN=        49
MAX. DN=       200

f2      inp=(tb2.img,tb5.img) out=test3.img  +
        func="255-(100*(in2/(in1+0.0001)))"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 using byte table lookup
FUNCTION EVALUATED 65536 TIMES
hist    test3.img
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
          0         48
          1          7
          2          5
          3          7
          4          4
          5          4
          6          8
          7         10
          8         13
          9         11
         10         13
         11         19
         12         24
         13         18
         14         16
         15         20
         16         22
         17         31
         18         25
         19         32
         20         27
         21         40
         22         44
         23         60
         24         50
         25         85
         26         76
         27         90
         28        104
         29        140
         30        133
         31        166
         32        191
         33        231
         34        227
         35        272
         36        348
         37        326
         38        419
         39        516
         40        530
         41        678
         42        747
         43        957
         44       1023
         45       1257
         46       1381
         47       1602
         48       1865
         49       2141
         50       2649
         51       3231
         52       3115
         53       3033
         54       5200 *
         55       6659 *
         56       7717 *
         57       6030 *
         58       8206 *
         59      10280 **
         60      11752 **
         61      12772 **
         62      14517 **
         63      17407 ***
         64      20003 ****
         65      22235 ****
         66      26499 *****
         67      26572 *****
         68      34599 *******
         69      37210 *******
         70      39758 ********
         71      44975 *********
         72      45222 *********
         73      52985 **********
         74      55425 ***********
         75      60576 ************
         76      62052 ************
         77      66580 *************
         78      71753 **************
         79      76581 ***************
         80      75837 ***************
         81      83354 ****************
         82      85876 *****************
         83      93086 ******************
         84      98520 *******************
         85     102399 ********************
         86     108260 *********************
         87     118030 ***********************
         88     125646 *************************
         89     127786 *************************
         90     137599 ***************************
         91     148776 ******************************
         92     141239 ****************************
         93     172481 **********************************
         94     171214 **********************************
         95     168377 **********************************
         96     186745 *************************************
         97     187651 **************************************
         98     198330 ****************************************
         99     200305 ****************************************
        100     205728 *****************************************
        101     212572 *******************************************
        102     211705 ******************************************
        103     222696 *********************************************
        104     246438 **************************************************  2
        105     193517 ***************************************
        106     250838 **************************************************  1
        107     230983 **********************************************
        108     230166 **********************************************
        109     235662 ***********************************************
        110     234790 ***********************************************
        111     236257 ***********************************************
        112     229472 **********************************************
        113     241495 ************************************************
        114     234413 ***********************************************
        115     219621 ********************************************
        116     226722 *********************************************
        117     207900 ******************************************
        118     237882 ************************************************
        119     208794 ******************************************
        120     202247 *****************************************
        121     201199 ****************************************
        122     205121 *****************************************
        123     204781 *****************************************
        124     191261 **************************************
        125     183806 *************************************
        126     180336 ************************************
        127     170115 **********************************
        128     169541 **********************************
        129     153722 *******************************
        130     179840 ************************************
        131     145286 *****************************
        132     145793 *****************************
        133     143835 *****************************
        134     138472 ****************************
        135     134917 ***************************
        136     129206 **************************
        137     122922 ************************
        138     113802 ***********************
        139     121392 ************************
        140     111628 **********************
        141     105624 *********************
        142      96729 *******************
        143     111612 **********************
        144     105568 *********************
        145      95926 *******************
        146     101692 ********************
        147      97733 *******************
        148     100448 ********************
        149     100079 ********************
        150      95497 *******************
        151     105672 *********************
        152      85045 *****************
        153     104181 *********************
        154      81846 ****************
        155     108209 *********************
        156      76606 ***************
        157      85876 *****************
        158      70952 **************
        159      74815 ***************
        160      64625 *************
        161      63610 ************
        162      56788 ***********
        163      53868 **********
        164      49699 **********
        165      46219 *********
        166      42841 ********
        167      38042 *******
        168      39238 *******
        169      34560 *******
        170      31382 ******
        171      28287 *****
        172      26554 *****
        173      24585 ****
        174      22476 ****
        175      20039 ****
        176      18335 ***
        177      16419 ***
        178      15181 ***
        179      13312 **
        180      12146 **
        181      10671 **
        182       8957 *
        183       8302 *
        184       7089 *
        185       6055 *
        186       5155 *
        187       4362
        188       3511
        189       3004
        190       2464
        191       1870
        192       1498
        193       1380
        194       1022
        195        841
        196        776
        197        665
        198        559
        199        509
        200        528
        201        464
        202        429
        203        436
        204        428
        205        378
        206        437
        207        404
        208        450
        209        435
        210        474
        211        520
        212        586
        213        693
        214        702
        215       1240
        216       1228
        217       1619
        218       3405
        219       4477
        220       7554 *
        221      10399 **
        222      18470 ***
        223      16053 ***
        224      24929 *****
        225      19043 ***
        226      29676 ******
        227      21757 ****
        228      43122 ********
        229      21148 ****
        230      27174 *****
        231      28548 *****
        232       5873 *
        233       4944 *
        234       1231
        235        975
        236        570
        237        466
        238        357
        239        284
        240        229
        241        193
        242        143
        243        130
        244         96
        245         87
        246         62
        247         50
        248         47
        249         46
        250         20
        251         22
        252         12
        253         10
        255*         1

AVERAGE GRAY LEVEL=118.9260
STANDARD DEVIATION=29.47325
NUMBER ELEMENTS=  14364100
MIN. DN=         0
MAX. DN=       255

f2      inp=(tb2.img,tb5.img,tb3.img) out=test4.img  +
        func="50*((in2-in3)/(in1+0.0001))"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 calculating every pixel
FUNCTION EVALUATED 14364100 TIMES
hist    test4.img
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
          0    2175003 **************************************************  1
          1     162506 **************
          2     163810 **************
          3     162204 **************
          4     171497 ***************
          5     181669 ****************
          6     195423 *****************
          7     215538 *******************
          8     234534 *********************
          9     264416 ************************
         10     293576 **************************
         11     336188 ******************************
         12     398601 ************************************
         13     375880 **********************************
         14     422978 **************************************
         15     448730 ****************************************
         16     478195 *******************************************
         17     487747 ********************************************
         18     507216 **********************************************
         19     531764 ************************************************
         20     534447 ************************************************
         21     526730 ***********************************************
         22     550413 **************************************************  2
         23     515530 **********************************************
         24     483051 *******************************************
         25     506466 **********************************************
         26     428824 **************************************
         27     417652 *************************************
         28     373120 *********************************
         29     322283 *****************************
         30     292375 **************************
         31     247385 **********************
         32     212591 *******************
         33     158315 **************
         34     140881 ************
         35     105036 *********
         36      81614 *******
         37      65818 *****
         38      42088 ***
         39      36092 ***
         40      27400 **
         41      21782 *
         42      16796 *
         43      12269 *
         44       9469
         45       7317
         46       5433
         47       4417
         48       2657
         49       2666
         50       1180
         51       1527
         52        835
         53        645
         54        412
         55        300
         56        194
         57        153
         58        118
         59         89
         60         54
         61         41
         62         43
         63         22
         64         17
         65         12
         66          9
         67         11
         68          6
         69          1
         70          2
         71          4
         72          7
         73          3
         74          2
         75          4
         76          2
         77          1
         78          6
         79          1
         80          1
         81          2
         83*         3
         88*         1

AVERAGE GRAY LEVEL=16.43895
STANDARD DEVIATION=10.63280
NUMBER ELEMENTS=  14364100
MIN. DN=         0
MAX. DN=        88

f2      inp=(tb1.img,tb2.img,tb3.img,tb4.img,tb5.img,tb7.img) out=test5.img  +
        func="50*((in1+in2+in3)/(in4+in5+in6))"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 calculating every pixel
FUNCTION EVALUATED 14364100 TIMES
hist    test5.img
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
         23*         6
         24         34
         25        266
         26        496
         27        785
         28       1028
         29       1626
         30       2355
         31       3695
         32       5831
         33       9311
         34      15056
         35      28234 *
         36      57175 **
         37     104299 ****
         38     183177 ********
         39     296394 *************
         40     484355 *********************
         41     710269 ********************************
         42     901993 ****************************************
         43    1038087 **********************************************
         44    1104949 **************************************************  2
         45    1113952 **************************************************  1
         46    1060781 ************************************************
         47     967977 *******************************************
         48     849555 **************************************
         49     702262 *******************************
         50     557505 *************************
         51     481083 *********************
         52     391104 *****************
         53     320486 **************
         54     268175 ************
         55     231851 **********
         56     203551 *********
         57     183829 ********
         58     172936 *******
         59     162934 *******
         60     150863 ******
         61     139163 ******
         62     122871 *****
         63     115007 *****
         64      99395 ****
         65      87670 ***
         66      76978 ***
         67      66807 ***
         68      59876 **
         69      53239 **
         70      48045 **
         71      43466 *
         72      39511 *
         73      36860 *
         74      34538 *
         75      32555 *
         76      29910 *
         77      26785 *
         78      23696 *
         79      21107
         80      18627
         81      16727
         82      14295
         83      12745
         84      11040
         85       9603
         86       8201
         87       7070
         88       6493
         89       5259
         90       4522
         91       3790
         92       3150
         93       2626
         94       2102
         95       1797
         96       1469
         97       1248
         98       1046
         99        845
        100        662
        101        643
        102        531
        103        431
        104        433
        105        384
        106        318
        107        304
        108        300
        109        278
        110        291
        111        268
        112        255
        113        274
        114        236
        115        246
        116        217
        117        225
        118        217
        119        220
        120        213
        121        202
        122        203
        123        225
        124        204
        125        198
        126        205
        127        215
        128        219
        129        240
        130        248
        131        206
        132        219
        133        211
        134        250
        135        262
        136        240
        137        232
        138        285
        139        276
        140        292
        141        258
        142        287
        143        282
        144        300
        145        303
        146        351
        147        363
        148        425
        149        425
        150        363
        151        425
        152        465
        153        533
        154        572
        155        593
        156        618
        157        583
        158        661
        159        686
        160        766
        161        752
        162        685
        163        999
        164       1044
        165       1121
        166       1362
        167       1450
        168       1816
        169       1794
        170       2176
        171       2490
        172       2820
        173       2892
        174       3231
        175       4053
        176       3540
        177       3706
        178       3778
        179       3981
        180       3889
        181       4362
        182       3763
        183       3957
        184       3667
        185       4044
        186       3685
        187       3146
        188       4137
        189       3535
        190       3678
        191       3644
        192       3269
        193       4018
        194       3633
        195       3864
        196       3277
        197       3359
        198       4466
        199       5083
        200       5303
        201       5691
        202       4995
        203       2615
        204       5019
        205       6377
        206       6686
        207       3441
        208       5554
        209       6338
        210       7176
        211       3832
        212       5660
        213       7456
        214       6724
        215       4692
        216       4968
        217       5759
        218       6649
        219       3285
        220       5559
        221       4194
        222       5694
        223       3596
        224       5411
        225       1959
        226       4727
        227       2227
        228       3563
        229       2242
        230       1583
        231       2531
        232       2026
        233       1499
        234       1002
        235        991
        236       1200
        237        605
        238        543
        239        673
        240        593
        241        457
        242        176
        243        389
        244        329
        245         90
        246        241
        247        202
        248         84
        249        127
        250        148
        251         81
        252         84
        253         93
        254         59
        255       1500

AVERAGE GRAY LEVEL=51.70625
STANDARD DEVIATION=23.35677
NUMBER ELEMENTS=  14364100
MIN. DN=        23
MAX. DN=       255

stretch test2.img yy2 table=(0,0.,133,0.,134,1.,255,1.)
Beginning VICAR task stretch
STRETCH - Jun 06, 2012 (64-bit) RJB **
*** TABLE STRETCH MODE ***
stretch test3.img yy3 table=(0,0.,204,0.,205,1.,255,1.)
Beginning VICAR task stretch
STRETCH - Jun 06, 2012 (64-bit) RJB **
*** TABLE STRETCH MODE ***
stretch test5.img yy5 table=(0,0.,119,0.,120,1.,255,1.)
Beginning VICAR task stretch
STRETCH - Jun 06, 2012 (64-bit) RJB **
*** TABLE STRETCH MODE ***
f2      (yy2,yy3,yy5) yy6 func="(in1+in2+in3)"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 calculating every pixel
FUNCTION EVALUATED 14364100 TIMES
f2      yy6 yy7 func="(in1==3)"
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 using byte table lookup
FUNCTION EVALUATED 256 TIMES
hist    yy7
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
          0   14065490 **************************************************  1
          1     298610 **************************************************  2

AVERAGE GRAY LEVEL=0.020789
STANDARD DEVIATION=0.142676
NUMBER ELEMENTS=  14364100
MIN. DN=         0
MAX. DN=         1

cform   yy7 yy7.hlf iran=(0,1) oran=(0,1) 'half
Beginning VICAR task cform
CFORM VERSION 06-JUN-1998
OUT = IN *     1.000+     0.000
INPUT FORMAT = BYTE
OUTPUT FORMAT = HALF
CONVERSION COMPLETE
concomp yy7.hlf (yy8,yy8work) thresh=50
Beginning VICAR task concomp
concomp version Thu Jul  3 2014
f2      yy8 yy9 func="in1!=0" format=byte
Beginning VICAR task f2
F2 version 09-Feb-2015 (64-bit) - RJB
F2 calculating every pixel
FUNCTION EVALUATED 14364100 TIMES
hist    yy9
Beginning VICAR task hist
*** HIST version 2019-03-05 ***

Bin Width =        1.0
          0   14068552 **************************************************  1
          1     295548 **************************************************  2

AVERAGE GRAY LEVEL=0.020575
STANDARD DEVIATION=0.141958
NUMBER ELEMENTS=  14364100
MIN. DN=         0
MAX. DN=         1

lab2tcl yy8 v1=compress keyword="compress" type="SYSTEM"
Beginning VICAR task lab2tcl
LAB2TCL - 09 Dec 2012 - rjb - (64-bit)
let $echo="no"
Show images are compressed
 Notice label-li does not directly reveal compression
 But in list of tasks you will see
---- Task: COMPRS -- User: rkf -- Mon Sep  8 18:45:16 2008 ----
 This is suggesstive evidence of compression

yy8 compression = BASIC
lab2tcl test2.img v1=compress keyword="compress" type="SYSTEM"
Beginning VICAR task lab2tcl
LAB2TCL - 09 Dec 2012 - rjb - (64-bit)
let $echo="no"
test2.img compression = BASIC

 Now, uncompress images for comptab2
comprs yy8 yy8u compress="none"
Beginning VICAR task comprs
comprs test2.img test2u.img compress="none"
Beginning VICAR task comprs
comprs test3.img test3u.img compress="none"
Beginning VICAR task comprs
comprs test5.img test5u.img compress="none"
Beginning VICAR task comprs
comptab2 (yy8u,test2u.img,test3u.img,test5u.img) ib8u
Beginning VICAR task comptab2
comptab2 version Thu Nov  6 2017
label-li ib8u
Beginning VICAR task label
************************************************************
 
        ************  File ib8u ************
                3 dimensional TABULAR file
                File organization is BSQ
                Pixels are in BYTE format from a X86-LINUX host
                1 bands
                0 lines per band
                512 samples per line
                25 lines of binary header of type IBIS
                0 bytes of binary prefix per line
---- Property: GEOTIFF ----
GTMODELTYPEGEOKEY='2(MODELTYPEGEOGRAPHIC)'
GEOGELLIPSOIDGEOKEY='7030(ELLIPSE_WGS84)'
MODELTIEPOINTTAG=
'(109907.99999997,-37901.000000007,0,-9.000000000000E+01,4.500000000000E+01,0.0)'
MODELPIXELSCALETAG='(0.0002638522427,0.0002638522427,0.0)'
GTRASTERTYPEGEOKEY='2(RASTERPIXELISPOINT)'
---- Property: IBIS ----
NR=62
NC=27
ORG='COLUMN'
FMT_DEFAULT='REAL'
FMT_FULL=(1, 2, 3, 4)
FMT_DOUB=(5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 
23, 24, 25, 26, 27)
SEGMENT=64
BLOCKSIZE=512
COFFSET=(0, 4, 8, 12, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 
120, 128, 136, 144, 152, 160, 168, 176, 184, 192)
---- Task: VTIFF3 -- User: rkf -- Mon Sep  8 18:45:07 2008 ----
---- Task: GEOMV -- User: rkf -- Mon Sep  8 18:45:10 2008 ----
---- Task: GTCOPY -- User: rkf -- Mon Sep  8 18:45:14 2008 ----
RAWFNAME='p039r037_7t20000503_z11_nn20'
RAWPATH='p039r037_7x20000503'
VERSION=1
---- Task: COMPRS -- User: rkf -- Mon Sep  8 18:45:16 2008 ----
---- Task: FEATHERV -- User: rkf -- Wed Oct 29 16:05:38 2008 ----
---- Task: F2 -- User: rkf -- Mon Mar 23 16:21:13 2009 ----
FUNCTION='in1*in2'
---- Task: GTCOPY -- User: afids -- Tue Sep 17 17:53:19 2019 ----
---- Task: F2 -- User: afids -- Tue Sep 17 17:53:35 2019 ----
FUNCTION='100*(((in1-in2)/(in1+in2))+1)'
---- Task: STRETCH -- User: afids -- Tue Sep 17 17:53:46 2019 ----
PARMS='Table Stretch'
---- Task: F2 -- User: afids -- Tue Sep 17 17:53:47 2019 ----
FUNCTION='(in1+in2+in3)'
---- Task: F2 -- User: afids -- Tue Sep 17 17:53:49 2019 ----
FUNCTION='(in1==3)'
---- Task: CFORM -- User: afids -- Tue Sep 17 17:53:49 2019 ----
CONV='OUT = IN *     1.000+     0.000'
---- Task: CONCOMP -- User: afids -- Tue Sep 17 17:53:49 2019 ----
---- Task: COMPRS -- User: afids -- Tue Sep 17 17:53:52 2019 ----
---- Task: COMPTAB2 -- User: afids -- Tue Sep 17 17:53:53 2019 ----
 
************************************************************
ibis-li ib8u nr=5 nc=25
Beginning VICAR task ibis
 
Number of Rows:62  Number of Columns: 27      
File Version:IBIS-2  Organization:COLUMN  SubType:NONE
 
Rows: 1:5
+-----------+-----------+-----------+-----------+-----------+-----------
         C:1         C:2         C:3         C:4         C:5         C:6
+-----------+-----------+-----------+-----------+-----------+-----------
           1           0           0           0       36.14       38.79
           2           0           0           0       99.21      626.24
           3           0           0           0       12.77      614.36
           4           0           0           0       31.32      740.27
           5           0           0           0       41.41      739.81
 
Rows: 1:5
+-----------+-----------+-----------+-----------+-----------+-----------
         C:7         C:8         C:9        C:10        C:11        C:12
+-----------+-----------+-----------+-----------+-----------+-----------
      652.94        0.00        0.00        0.00        0.00      154.03
      589.41        0.00        0.00        0.00        0.00      151.68
     3234.27        0.00        0.00        0.00        0.00      153.27
     3392.10        0.00        0.00        0.00        0.00      162.91
     3424.51        0.00        0.00        0.00        0.00      166.37
 
Rows: 1:5
+-----------+-----------+-----------+-----------+-----------+-----------
        C:13        C:14        C:15        C:16        C:17        C:18
+-----------+-----------+-----------+-----------+-----------+-----------
       93.24      224.76      133.95      177.16       61.70        0.00
       95.51      223.00      138.05      175.21       64.94        0.00
      119.55      224.29      186.73      144.51       85.45        0.00
      113.00      232.06      173.79      144.30       76.34        0.00
      129.14      234.61      197.29      153.52       92.97        0.00
 
Rows: 1:5
+-----------+-----------+-----------+-----------+-----------+-----------
        C:19        C:20        C:21        C:22        C:23        C:24
+-----------+-----------+-----------+-----------+-----------+-----------
        0.00        0.00        0.00        0.00        0.00        0.00
        0.00        0.00        0.00        0.00        0.00        0.00
        0.00        0.00        0.00        0.00        0.00        0.00
        0.00        0.00        0.00        0.00        0.00        0.00
        0.00        0.00        0.00        0.00        0.00        0.00
 
Rows: 1:5
+-----------
        C:25
+-----------
        0.00
        0.00
        0.00
        0.00
        0.00
let $echo ="no"
Home in on Pyramid Lake along I-5 - object 26

Beginning VICAR task ibis
 
Number of Rows:62  Number of Columns: 27      
File Version:IBIS-2  Organization:COLUMN  SubType:NONE
 
Rows: 26:26
+-----------+-----------+-----------+-----------+-----------+-----------
         C:1         C:2         C:3         C:4         C:5         C:6
+-----------+-----------+-----------+-----------+-----------+-----------
          26           0           0           0      224.97     1299.87
 
Rows: 26:26
+-----------+-----------+-----------+-----------+-----------+-----------
         C:7         C:8         C:9        C:10        C:11        C:12
+-----------+-----------+-----------+-----------+-----------+-----------
      850.09        0.00        0.00        0.00        0.00      154.19
 
Rows: 26:26
+-----------+-----------+-----------+-----------+-----------+-----------
        C:13        C:14        C:15        C:16        C:17        C:18
+-----------+-----------+-----------+-----------+-----------+-----------
       98.63      225.11      148.88      183.74       65.94        0.00
 
Rows: 26:26
+-----------+-----------+-----------
        C:19        C:20        C:21
+-----------+-----------+-----------
        0.00        0.00        0.00

------------------------------------------------------------------------
col 1.  component number of Pyramid Lake
col 2.  count of pixels contained in Pyramid Lake = 6288
col 3.  line number of first pixel scanned        = 1207
col 4.  sample number of first pixel scanned      = 814
col 5.  diameter in pixels of Pyramid Lake        = 224.97
col 6.  average brightness (pixel value) of Pyramid Lake in test2.img 
col 7.  average brightness (pixel value) in neighborhood of Pyramid Lake
col 8.  average brightness (pixel value) in Pyramid Lake in test3.img
col 9.  average brightness (pixel value) in neighborhood of Pyramid Lake
col 10. average brightness (pixel value) in Pyramid Lake in test5.img
col 11. average brightness (pixel value) in neighborhood of Pyramid Lake
------------------------------------------------------------------------

exit
slogoff
